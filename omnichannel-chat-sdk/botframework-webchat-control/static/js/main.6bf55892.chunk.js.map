{"version":3,"sources":["context/index.tsx","components/WebChat/AdaptiveCardFieldsValidator.ts","components/Loading/Loading.tsx","components/ChatButton/ChatButton.tsx","components/ChatHeader/ChatHeader.tsx","components/Calling/IncomingCall.tsx","components/Calling/Calling.tsx","components/ActionBar/ActionBar.tsx","components/WebChat/ActionTypes.ts","components/WebChat/createCustomStore.ts","components/WebChat/DirectLineSenderRole.ts","components/WebChat/createDataMaskingMiddleware.ts","components/WebChat/createActivityMiddleware.tsx","components/WebChat/createActivityStatusMiddleware.tsx","components/WebChat/createAvatarMiddleware.tsx","components/WebChat/createAttachmentMiddleware.tsx","components/Attachment/AttachmentContent.tsx","components/Attachment/AttachmentIcon.tsx","components/WebChat/createChannelDataMiddleware.ts","utils/transformLiveChatConfig.ts","components/WebChat/createTypingIndicatorMiddleware.tsx","utils/fetchOmnichannelConfig.ts","utils/fetchTelemetryConfig.ts","utils/fetchCallingConfig.ts","utils/fetchDebugConfig.ts","utils/fetchChatReconnectConfig.ts","components/WebChat/WebChat.tsx","reportWebVitals.ts","index.tsx"],"names":["ActionType","errorAlertPrefix","RequiredFieldValidator","value","errors","isValid","push","RequiredBooleanFieldValidator","toLowerCase","console","log","AdaptiveCardFieldsValidator","element","source","context","isInteractive","onValueChanged","input","validateInput","validators","isRequired","JSON","parse","id","IsRequired","type","inputs","map","every","result","enable","buttonElement","document","querySelector","removeAttribute","setAttribute","length","validator","validate","this","enableSubmitButton","removeErrors","renderErrors","message","divElement","createElement","innerHTML","forEach","error","elementId","errorElement","createErrorElement","renderedElement","parentNode","insertBefore","nextSibling","getElementById","remove","initialState","hasChatStarted","messages","isTyping","agentEndSessionEvent","isLoading","Reducer","state","action","SET_CHAT_STARTED","payload","SET_MESSAGES","SET_TYPING","SET_AGENT_END_SESSION_EVENT","SET_LOADING","Store","createContext","Provider","StateProvider","props","useReducer","dispatch","children","Loading","className","color","height","width","ChatButton","onClick","ChatHeader","title","IncomingCall","rejectCall","acceptVideoCall","acceptVoiceCall","adjustWebChatHeightInVideoCall","webChatTranscriptContainer","getElementsByClassName","remoteVideoContainer","currentCallActionBar","newHeight","clientHeight","style","marginTop","adjustWebChatHeightIncomingCall","incomingCallContainer","adjustWebChatHeightInVoiceCall","adjustWebChatHeightNoCall","Calling","useState","isInitialized","setIsInitialized","incomingCall","setIncomingCall","inVideoCall","setInVideoCall","inVoiceCall","setInVoiceCall","isMicrophoneMuted","setIsMicrophoneMuted","setIsRemoteVideoEnabled","isLocalVideoEnabled","setIsLocalVideoEnabled","useEffect","init","a","VoiceVideoCallingSDK","OCClient","chatToken","initialize","selfVideoHTMLElementId","remoteVideoHTMLElementId","environment","onCallAdded","onCallDisconnected","onLocalVideoStreamAdded","isRemoteVideoEnabled","onLocalVideoStreamRemoved","onRemoteVideoStreamAdded","onRemoteVideoStreamRemoved","useCallback","acceptCall","withVideo","toggleVideoButton","toggleLocalVideo","toggleMuteButton","toggleMute","stopCallButton","stopCall","ActionBar","isDownloadFocused","setIsDownloadFocused","isEmailTranscriptFocused","setIsEmailTranscriptFocused","onMouseEnterDownload","onMouseLeaveDownload","onMouseEnterEmailTranscript","onMouseLeaveEmailTranscript","size","onDownloadClick","onMouseEnter","onMouseLeave","onEmailTranscriptClick","DIRECT_LINE_INCOMING_ACTIVITY","CustomStore","middlewares","name","middleware","createStore","next","activity","nextAction","Object","keys","currentMiddleware","applicable","apply","dispatchAction","_instance","DirectLineSenderRole","createCustomStore","getInstance","DataMaskingMiddleware","dataMaskingRules","text","applyDataMasking","values","maskingRule","regex","RegExp","match","exec","replaceStr","replace","createDataMaskingMiddleware","chatConfig","ChannelDataType","SendStatus","createActivityMiddleware","card","from","role","Channel","channelData","THREAD","tags","includes","undefined","getInitial","initials","split","reduce","response","word","slice","substring","toUpperCase","createAvatarMiddleware","fromUser","MimeTypes","createActivityStatusMiddleware","activityType","isSystemActivity","isAgentActivity","isCustomerActivity","sendState","Sent","Sending","SendFailed","AttachmentContent","fontSize","display","alignItems","getIcon","extension","iconSize","ArchiveIcon","xmlns","viewBox","d","AudioIcon","BlankIcon","ExcelIcon","ImageIcon","OneNoteIcon","PDFIcon","PowerpointIcon","VideoIcon","VisioIcon","WordIcon","FileAttachmentIconMap","key","startsWith","icon","AttachmentIcon","fileExtension","lastIndexOf","padding","imageRegex","audioMediaRegex","videoMediaRegex","supportedAdaptiveCardContentTypes","patchAttachment","newAttachment","attachment","patchedAttachment","assign","contentType","thumbnailUrl","patchedAttachments","attachments","target","patchedActivity","DeliveryMode","createAttachmentMiddleware","content","e","middlewareData","contentUrl","tempContentUrl","imageExtension","test","audioExtension","videoExtension","patchedCard","UnknownFileType","actionType","ChannelDataMiddleware","omnichannelConfig","channelIdTag","customerMessageTag","metadata","deliveryMode","Bridged","widgetId","createChannelDataMiddleware","ConfigurationManager","liveChatVersion","canUploadAttachment","isPersistentChat","isChatReconnect","transformLiveChatConfig","liveChatConfig","liveWSAndLiveChatEngJoin","parseInt","createTypingIndicatorMiddleware","sendTypingEvent","typingIndicatorMiddleware","activeTyping","visible","typers","filter","typer","background","fetchOmnichannelConfig","orgId","process","orgUrl","urlParams","URLSearchParams","window","location","search","get","fetchTelemetryConfig","telemetryConfig","telemetry","disable","ariaTelemetryKey","fetchCallingConfig","callingConfig","fetchDebugConfig","debugConfig","fetchChatReconnectConfig","chatReconnectConfig","reconnectId","avatarMiddleware","activityMiddleware","activityStatusMiddleware","channelDataMiddleware","attachmentMiddleware","defaultStyleOptions","bubbleBorderRadius","bubbleNubSize","bubbleNubOffset","bubbleFromUserBorderRadius","bubbleFromUserNubSize","bubbleFromUserNubOffset","bubbleFromUserBackground","WebChat","useContext","chatSDK","setChatSDK","liveChatContext","setLiveChatContext","preChatSurvey","setPreChatSurvey","preChatResponse","setPreChatResponse","chatAdapter","setChatAdapter","webChatStore","setWebChatStore","setChatToken","setVoiceVideoCallingSDK","setTypingIndicatorMiddleware","shouldHideSendBox","setShouldHideSendBox","chatSDKConfig","chatReconnect","OmnichannelChatSDK","setDebug","getLiveChatConfig","localStorage","getItem","getVoiceVideoCalling","VoiceVideoCalling","getPreChatSurvey","info","adaptiveCard","replaceAll","styleOptions","useMemo","hideUploadButton","hideSendBox","onNewMessage","onTypingEvent","onAgentEndSession","startChat","_","optionalParams","getDataMaskingRules","store","create","subscribe","getChatReconnectContext","chatReconnectContext","redirectURL","getCurrentLiveChatContext","newliveChatContext","setItem","stringify","rehydrate","createChatAdapter","getChatToken","endChat","end","close","removeItem","downloadTranscript","getLiveChatTranscript","transcript","emailTranscript","transcriptBody","emailAddress","attachmentMessage","emailLiveChatTranscript","renderPreChatSurvey","AdaptiveCards","SerializationContext","onParseElement","attachFieldValidator","onExecuteAction","getAllInputs","canSubmitSurvey","data","renderedCard","render","ref","n","firstChild","removeChild","appendChild","userID","directLine","sendTypingIndicator","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"0rBAEKA,E,yGCECC,EAAmB,cAEnBC,E,wFASF,SAAgBC,EAAeC,GAE3B,IAAMC,IAAYF,EAMlB,OAJKE,GACDD,EAAOE,KAAK,oCAGTD,M,KAITE,E,wFAQF,SAAgBJ,EAAeC,GAG3B,IAAMC,IAAYF,GAAiC,SAAxBA,EAAMK,cAMjC,OALAC,QAAQC,IAAIL,GACPA,GACDD,EAAOE,KAAK,oCAGTD,M,KA6IAM,E,oGA/HX,SAA4BC,EAAsBC,EAAaC,GAAgC,IAAD,OAG1F,GAAKF,EAAQG,cAAb,CAICH,EAAgBI,eAAiB,SAACC,GAAD,OAAkB,EAAKC,cAAcD,IAGtEL,EAAgBO,WAAa,GAE9B,IACmBC,EADRC,KAAKC,MAAMT,EAAOU,IACtBC,WACPJ,GAAeR,EAAgBO,WAAWb,KAAK,IAAIJ,GAE/B,iBAAhBW,EAAOY,MACPL,GAAeR,EAAgBO,WAAWb,KAAK,IAAIC,M,6BAU3D,SAAuBmB,GAA2B,IAAD,OAI7C,OAFgBA,EAAOC,KAAI,SAACV,GAAD,OAAkB,EAAKC,cAAcD,MAC1CW,OAAM,SAACC,GAAD,OAAqBA,O,gCASpD,SAA0BC,GACvB,IAAMC,EAAgBC,SAASC,cA/FZ,wBAiGfH,EACa,OAAbC,QAAa,IAAbA,KAAeG,gBAAgB,YAElB,OAAbH,QAAa,IAAbA,KAAeI,aAAa,WAAY,QAG/B,OAAbJ,QAAa,IAAbA,KAAeI,aAAa,gBAAiBL,EAAQ,QAAS,U,2BASlE,SAAsBb,GAIlB,IAAKA,EAAME,WAAWiB,OAElB,OADAnB,EAAMZ,QAAU,kBAAM,IACf,EAGX,IAAMD,EAAc,GAMpB,OAJIa,EAAME,WAAWiB,SACjBnB,EAAMZ,QAAU,kBAAMY,EAAME,WAAWS,OAAM,SAACS,GAAD,OAAoBA,EAAUC,SAASrB,EAAMd,MAAOC,QAGhGa,EAAMZ,WAOPkC,KAAKC,oBAAmB,GACxBD,KAAKE,aAAaxB,IACX,IAPPsB,KAAKC,oBAAmB,GACxBD,KAAKG,aAAazB,EAAOb,IAClB,K,gCASf,SAA2BuC,EAAiBpB,GACxC,IAAMqB,EAAaZ,SAASa,cAAc,OAU1C,OATAD,EAAWrB,GAAKA,EAChBqB,EAAWE,UAAX,kMAKUH,EALV,mCAQOC,I,0BASX,SAAqB3B,EAAYb,GAAmB,IAAD,OAI/CA,EAAO2C,SAAQ,SAACC,GACZ,IAAMC,EAAS,UAAMhD,EAAN,YAA0BgB,EAAMM,IACzC2B,EAAe,EAAKC,mBAAmBH,EAAOC,GACpDhC,EAAMmC,gBAAgBC,WAAWC,aAAaJ,EAAcjC,EAAMmC,gBAAgBG,kB,0BAS1F,SAAqBtC,GACjB,IAAM2B,EAAaZ,SAASwB,eAAT,UAA2BvD,EAA3B,YAA+CgB,EAAMM,KAC9D,OAAVqB,QAAU,IAAVA,KAAYa,a,kDDnLfzD,O,uCAAAA,I,+BAAAA,I,2BAAAA,I,6DAAAA,I,8BAAAA,M,KAqBL,IAAM0D,EAAe,CACnBC,gBAAgB,EAChBC,SAAU,GACVC,UAAU,EACVC,sBAAsB,EACtBC,WAAW,GAGPC,EAAU,SAACC,EAAYC,GAC3B,OAAQA,EAAOzC,MACb,KAAKzB,EAAWmE,iBACd,OAAO,2BACFF,GADL,IAEExC,KAAMyC,EAAOzC,KACbkC,eAAgBO,EAAOE,UAE3B,KAAKpE,EAAWqE,aACd,OAAO,2BACFJ,GADL,IAEExC,KAAMyC,EAAOzC,KACbmC,SAAUM,EAAOE,UAErB,KAAKpE,EAAWsE,WACd,OAAO,2BACFL,GADL,IAEExC,KAAMyC,EAAOzC,KACboC,SAAUK,EAAOE,UAErB,KAAKpE,EAAWuE,4BACd,OAAO,2BACFN,GADL,IAEExC,KAAMyC,EAAOzC,KACbqC,qBAAsBI,EAAOE,UAEjC,KAAKpE,EAAWwE,YACd,OAAO,2BACFP,GADL,IAEExC,KAAMyC,EAAOzC,KACbsC,UAAWG,EAAOE,UAEtB,QACE,OAAOH,IAIPQ,EAA8BC,wBAAc,IAC1CC,EAAaF,EAAbE,SAEFC,EAAgB,SAACC,GACrB,MAA0BC,qBAAWd,EAASN,GAA9C,mBAAOO,EAAP,KAAcc,EAAd,KACA,OAAO,cAACJ,EAAD,CAAUxE,MAAO,CAAC8D,QAAOc,YAAzB,SAA4CF,EAAMG,Y,kCExD5CC,MAbf,WACI,OACI,qBAAKC,UAAU,UAAf,SACI,cAAC,IAAD,CACIzD,KAAK,OACL0D,MAAM,UACNC,OAAQ,IACRC,MAAO,S,kBCKRC,MARf,SAAoBT,GAClB,OACE,qBAAKK,UAAU,cAAcK,QAASV,EAAMU,QAA5C,SACE,cAAC,IAAD,CAAeJ,MAAM,a,kBCSZK,MAXf,SAAoBX,GAClB,OACE,sBAAKK,UAAU,cAAf,UACA,qCAAQL,EAAMY,MAAd,OACE,qBAAKF,QAASV,EAAMU,QAApB,SACE,cAAC,IAAD,U,oECSOG,MAbf,SAAsBb,GACpB,OACE,sBAAKK,UAAU,uBAAf,UACE,mDACA,gCACE,cAAC,IAAD,CAAUA,UAAU,qBAAqBK,QAASV,EAAMc,aACxD,cAAC,IAAD,CAAOT,UAAU,2BAA2BK,QAASV,EAAMe,kBAC3D,cAAC,IAAD,CAAOV,UAAU,2BAA2BK,QAASV,EAAMgB,yBCN7DC,G,QAAiC,WACrCrF,QAAQC,IAAR,6CACA,IAAMqF,EAA6B/D,SAASgE,uBAAuB,6BAA6B,GAC1FC,EAAuBjE,SAASwB,eAAe,eAC/C0C,EAAuBlE,SAASgE,uBAAuB,2BAA2B,GAElFG,EAAYJ,EAA2BK,aAAeH,EAAqBG,aAAeF,EAAqBE,aACrHL,EAA2BM,MAAMC,UAAjC,UAAgDL,EAAqBG,aAAeF,EAAqBE,aAAzG,MACAL,EAA2BM,MAAMjB,OAAjC,UAA6Ce,EAA7C,QAGII,EAAkC,WACtC9F,QAAQC,IAAR,8CACA,IAAMqF,EAA6B/D,SAASgE,uBAAuB,6BAA6B,GAC1FQ,EAAwBxE,SAASgE,uBAAuB,wBAAwB,GAEhFG,EAAYJ,EAA2BK,aAAeI,EAAsBJ,aAClFL,EAA2BM,MAAMjB,OAAjC,UAA6Ce,EAA7C,OAGIM,EAAiC,WACrChG,QAAQC,IAAR,6CACA,IAAMqF,EAA6B/D,SAASgE,uBAAuB,6BAA6B,GAC1FE,EAAuBlE,SAASgE,uBAAuB,2BAA2B,GAElFG,EAAYJ,EAA2BK,aAAeF,EAAqBE,aACjFL,EAA2BM,MAAMC,UAAjC,UAAgDJ,EAAqBE,aAArE,MACAL,EAA2BM,MAAMjB,OAAjC,UAA6Ce,EAA7C,OAGIO,EAA4B,WAChCjG,QAAQC,IAAR,wCACA,IAAMqF,EAA6B/D,SAASgE,uBAAuB,6BAA6B,GAChGD,EAA2BM,MAAMC,UAAY,GAC7CP,EAA2BM,MAAMjB,OAAS,IA4T7BuB,MAzTf,SAAiB9B,GACf,MAA0C+B,oBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAsCJ,oBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAsCN,oBAAS,GAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAAkDR,oBAAS,GAA3D,mBAAOS,EAAP,KAA0BC,EAA1B,KACA,EAAwDV,oBAAS,GAAjE,mBAA6BW,GAA7B,WACA,EAAsDX,oBAAS,GAA/D,mBAAOY,EAAP,KAA4BC,EAA5B,KAEAC,qBAAU,WACR,IAAMC,EAAI,uCAAG,gCAAAC,EAAA,yDACJC,EAA6ChD,EAA7CgD,qBAAsBC,EAAuBjD,EAAvBiD,SAAUC,EAAalD,EAAbkD,UAElCF,GAAyBE,GAAcD,EAHjC,qDAOPjB,EAPO,0EAYHgB,EAAqBG,WAAW,CACpCD,YACAE,uBAAwB,YACxBC,yBAA0B,cAC1BC,YAAa,OACbL,SAAUA,IAjBH,OAoBThB,GAAiB,GACjBrG,QAAQC,IAAI,0DACZD,QAAQC,IAAImH,GAtBH,kDAwBTpH,QAAQuC,MAAM,8DACdvC,QAAQuC,MAAR,MAzBS,QA4BX6E,EAAqBO,aAAY,WAC/B3H,QAAQC,IAAI,iCACZsG,GAAgB,GAChBT,OAGFsB,EAAqBQ,oBAAmB,WACtC5H,QAAQC,IAAI,wCACZgG,IAEAM,GAAgB,GAChBE,GAAe,GACfE,GAAe,MAGjBS,EAAqBS,yBAAwB,WAC3C7H,QAAQC,IAAI,6CAEZ,IAAM2G,EAAoBQ,EAAqBR,oBAC/CC,EAAqBD,GAErB,IAAMkB,EAAuBV,EAAqBU,uBAClDhB,EAAwBgB,GAExB,IAAMf,EAAsBK,EAAqBL,sBACjDC,EAAuBD,GAGlBA,GAAwBe,GAK3BvB,GAAgB,GAChBE,GAAe,GACfE,GAAe,KANfJ,GAAgB,GAChBE,GAAe,GACfE,GAAe,OAQnBS,EAAqBW,2BAA0B,WAC7C/H,QAAQC,IAAI,+CAEZ,IAAM2G,EAAoBQ,EAAqBR,oBAC/CC,EAAqBD,GAErB,IAAMkB,EAAuBV,EAAqBU,uBAClDhB,EAAwBgB,GAExB,IAAMf,EAAsBK,EAAqBL,sBACjDC,EAAuBD,GAGlBA,GAAwBe,GAK3BvB,GAAgB,GAChBE,GAAe,GACfE,GAAe,KANfJ,GAAgB,GAChBE,GAAe,GACfE,GAAe,OAQnBS,EAAqBY,0BAAyB,WAC5ChI,QAAQC,IAAI,8CAEZ,IAAM2G,EAAoBQ,EAAqBR,oBAC/CC,EAAqBD,GAErB,IAAMkB,EAAuBV,EAAqBU,uBAClDhB,EAAwBgB,GAExB,IAAMf,EAAsBK,EAAqBL,sBACjDC,EAAuBD,GAGlBA,GAAwBe,GAK3BvB,GAAgB,GAChBE,GAAe,GACfE,GAAe,KANfJ,GAAgB,GAChBE,GAAe,GACfE,GAAe,OAQnBS,EAAqBa,4BAA2B,WAC9CjI,QAAQC,IAAI,gDAEZ,IAAM2G,EAAoBQ,EAAqBR,oBAC/CC,EAAqBD,GAErB,IAAMkB,EAAuBV,EAAqBU,uBAClDhB,EAAwBgB,GAExB,IAAMf,EAAsBK,EAAqBL,sBACjDC,EAAuBD,GAGlBA,GAAwBe,GAK3BvB,GAAgB,GAChBE,GAAe,GACfE,GAAe,KANfJ,GAAgB,GAChBE,GAAe,GACfE,GAAe,OAnIR,0DAAH,qDA4IVO,MACC,CAAC9C,EAAOgC,IAEX,IAAMhB,EAAkB8C,sBAAW,sBAAC,kCAAAf,EAAA,6DAClCnH,QAAQC,IAAR,qCACOmH,EAAwBhD,EAAxBgD,qBAF2B,SAI5BA,EAAqBe,WAAW,CACpCC,WAAW,IALqB,OAQlC7B,GAAgB,GAChBE,GAAe,GACfE,GAAe,GAEfX,IAEMY,EAAoBQ,EAAqBR,oBAC/CC,EAAqBD,GAEfkB,EAAuBV,EAAqBU,uBAClDhB,EAAwBgB,GAElBf,EAAsBK,EAAqBL,sBACjDC,EAAuBD,GArBW,4CAsBjC,CAAC3C,IAEEe,EAAkB+C,sBAAW,sBAAC,kCAAAf,EAAA,6DAClCnH,QAAQC,IAAR,qCACOmH,EAAwBhD,EAAxBgD,qBAF2B,SAI5BA,EAAqBe,WAAW,CACpCC,WAAW,IALqB,OAQlC7B,GAAgB,GAChBE,GAAe,GACfE,GAAe,GAEftB,IAEMuB,EAAoBQ,EAAqBR,oBAC/CC,EAAqBD,GAEfkB,EAAuBV,EAAqBU,uBAClDhB,EAAwBgB,GAElBf,EAAsBK,EAAqBL,sBACjDC,EAAuBD,GArBW,4CAsBjC,CAAC3C,IAEEc,EAAagD,sBAAW,sBAAC,4BAAAf,EAAA,6DAC7BnH,QAAQC,IAAR,8BACOmH,EAAwBhD,EAAxBgD,qBAFsB,SAGvBA,EAAqBlC,aAHE,OAK7BqB,GAAgB,GAChBE,GAAe,GACfE,GAAe,GAPc,2CAQ5B,CAACvC,IAEEiE,EAAoBH,sBAAW,sBAAC,kCAAAf,EAAA,6DACpCnH,QAAQC,IAAR,wCACOmH,EAAwBhD,EAAxBgD,qBAF6B,SAG9BA,EAAqBkB,mBAHS,OAK9B1B,EAAoBQ,EAAqBR,oBAC/CC,EAAqBD,GAEfkB,EAAuBV,EAAqBU,uBAClDhB,EAAwBgB,GAElBf,EAAsBK,EAAqBL,sBACjDC,EAAuBD,GAGlBA,GAAwBe,GAK3BvB,GAAgB,GAChBE,GAAe,GACfE,GAAe,KANfJ,GAAgB,GAChBE,GAAe,GACfE,GAAe,IAlBmB,4CAwBnC,CAACvC,IAEEmE,EAAmBL,sBAAW,sBAAC,kCAAAf,EAAA,6DACnCnH,QAAQC,IAAR,kCACOmH,EAAwBhD,EAAxBgD,qBAF4B,SAG7BA,EAAqBoB,aAHQ,OAK7B5B,EAAoBQ,EAAqBR,oBAC/CC,EAAqBD,GAEfkB,EAAuBV,EAAqBU,uBAClDhB,EAAwBgB,GAElBf,EAAsBK,EAAqBL,sBACjDC,EAAuBD,GAGlBA,GAAwBe,GAK3BvB,GAAgB,GAChBE,GAAe,GACfE,GAAe,KANfJ,GAAgB,GAChBE,GAAe,GACfE,GAAe,IAlBkB,4CAwBlC,CAACvC,IAEEqE,EAAiBP,sBAAW,sBAAC,4BAAAf,EAAA,6DACjCnH,QAAQC,IAAR,gCACOmH,EAAwBhD,EAAxBgD,qBAF0B,SAG3BA,EAAqBsB,WAHM,2CAIhC,CAACtE,IAgBJ,OACE,qCAEIkC,GAAgB,cAAC,EAAD,CACdpB,WAAYA,EACZC,gBAAiBA,EACjBC,gBAAiBA,IAInB,sBAAKX,UAAS,kBAAa+B,GAAeE,EAAa,SAAU,IAAjE,UACE,sBAAKjC,UAAS,0BAAqB+B,EAAa,SAAU,IAA1D,UACE,qBAAK1F,GAAG,gBACR,qBAAKA,GAAG,iBAEV,+BAEK0F,GAAeE,IAAgB,sBAAKjC,UAAU,0BAAf,UA9BrCsC,EAGE,cAAC,IAAD,CAAOtC,UAAU,sBAAsBK,QAASuD,IAF9C,cAAC,IAAD,CAAU5D,UAAU,sBAAsBK,QAASuD,IAMxDzB,EACK,cAAC,IAAD,CAAQnC,UAAU,qBAAqBK,QAASyD,IAElD,cAAC,IAAD,CAAK9D,UAAU,qBAAqBK,QAASyD,IAuBxC,cAAC,IAAD,CAAU9D,UAAU,mBAAmBK,QAAS2D,gB,2BC5SjDE,MA1Cf,SAAoBvE,GAClB,MAAkD+B,oBAAS,GAA3D,mBAAOyC,EAAP,KAA0BC,EAA1B,KACA,EAAgE1C,oBAAS,GAAzE,mBAAO2C,EAAP,KAAiCC,EAAjC,KAEMC,EAAuBd,uBAAY,WACvCW,GAAqB,KACpB,IAEGI,EAAuBf,uBAAY,WACvCW,GAAqB,KACpB,IAEGK,EAA8BhB,uBAAY,WAC9Ca,GAA4B,KAC3B,IAEGI,EAA8BjB,uBAAY,WAC9Ca,GAA4B,KAC3B,IAEH,OACE,sBAAKtE,UAAU,aAAf,UACE,cAAC,IAAD,CACE2E,KAAM,KACN1E,MAAOkE,EAAmB,kBAAmB,uBAC7CnE,UAAU,kBACVK,QAASV,EAAMiF,gBACfC,aAAcN,EACdO,aAAcN,IAEhB,cAAC,IAAD,CACEG,KAAM,KACN1E,MAAOoE,EAA0B,kBAAmB,uBACpDrE,UAAU,eACVK,QAASV,EAAMoF,uBACfF,aAAcJ,EACdK,aAAcJ,QCrCTM,EAAgC,gCCFvCC,E,WAIF,aAAuB,yBAFfC,iBAEc,EAClB7H,KAAK6H,YAAc,G,6CAWvB,SAAiBC,EAAcC,GAC3B/H,KAAK6H,YAAYC,GAAQC,I,oBAG7B,WAAiB,IAAD,OAEZ,OADA7J,QAAQC,IAAR,yBACO6J,sBACH,IACA,gBAAGxF,EAAH,EAAGA,SAAH,OAAuB,SAACyF,GAAD,OAAe,SAACtG,GAG/BA,EAAOzC,OAASyI,IACKhG,EAAOE,QAApBqG,WAEJvG,EAAOE,QAAQqG,SAAf,WAAsCP,IAI9C,IAAIQ,EAAaxG,EACjB,GAAIA,GAAUA,EAAOE,QACjB,cAAmBuG,OAAOC,KAAK,EAAKR,aAApC,eAAkD,CAA7C,IAAMC,EAAI,KACLQ,EAAoB,EAAKT,YAAYC,GAE3C,GAAIQ,EAAkBC,WAAWJ,GAAa,CAC1C,IAAM7I,EAASgJ,EAAkBE,MAAML,GACnC7I,EAAOmJ,gBACPjG,EAASlD,EAAOmJ,gBAEhBnJ,EAAO6I,aACPA,EAAa7I,EAAO6I,aAKpC,OAAOF,EAAKE,W,0BA1CxB,WAII,OAHKnI,KAAK0I,YACN1I,KAAK0I,UAAY,IAAId,GAElB5H,KAAK0I,c,KAZdd,EACac,e,EAuDnB,IC9DKC,EDoEUC,GANW,WAGtB,OAFA1K,QAAQC,IAAR,uBACcyJ,EAAYiB,eE9CxBC,G,WAGF,WAAoBC,GAAwB,yBAFpCA,sBAEmC,EAEvC/I,KAAK+I,iBAAmBA,EAExB7K,QAAQC,IAAR,sBACAD,QAAQC,IAAI6B,KAAK+I,kB,8CAGrB,SAAkBpH,GAEd,IAAQqH,EAASrH,EAAOE,QAAhBmH,KACR,SAAIZ,OAAOC,KAAKrI,KAAK+I,kBAAkBlJ,OAAS,GAAKmJ,GAAwB,0BAAhBrH,EAAOzC,Q,mBAMxE,SAAayC,GAGT,MAAO,CACH8G,eAAgB,KAChBN,WAHcnI,KAAKiJ,iBAAiBtH,M,8BAO5C,SAAyBA,GACrB,IACKqH,EAAQrH,EAAOE,QAAfmH,KACL,GAAIZ,OAAOC,KAAKrI,KAAK+I,kBAAkBlJ,OAAS,EAC5C,cAA0BuI,OAAOc,OAAOlJ,KAAK+I,kBAA7C,eAGI,IAHC,IAAMI,EAAW,KACZC,EAAQ,IAAIC,OAAOF,EAAuB,KAC5CG,OAAK,EACFA,EAAQF,EAAMG,KAAKP,IAAO,CAC7B,IAAMQ,EAAaF,EAAM,GAAGG,QAAQ,KAPvB,KAQbT,EAAOA,EAAKS,QAAQH,EAAM,GAAIE,GAM1C,OADA7H,EAAOE,QAAQmH,KAAOA,EACfrH,M,KASA+H,GALqB,SAACC,GAEjC,OADAzL,QAAQC,IAAI,iCACL,IAAI2K,GAAsBa,K,SDpEhChB,K,YAAAA,E,UAAAA,E,mBAAAA,M,KAMUA,IEJViB,GFIUjB,M,SEJViB,K,iBAAAA,Q,KAIL,ICNKC,GD+DUC,GApDkB,WAC7B5L,QAAQC,IAAI,8BAgDZ,OA7C2B,kBAAM,SAAC8J,GAAD,OAAe,SAAC8B,GAI7C,GAHA7L,QAAQC,IAAR,0BAAuC,oCACvCD,QAAQC,IAAI4L,GAERA,EAAK7B,SAAU,CACf,GAAI6B,EAAK7B,SAAS8B,MACdD,EAAK7B,SAAS8B,KAAKC,OAAStB,GAAqBuB,QAOjD,OALIH,EAAK7B,SAASiC,aAAeJ,EAAK7B,SAASiC,YAAYjL,MACvD6K,EAAK7B,SAASiC,YAAYjL,OAAS0K,GAAgBQ,SAlB3CD,EAmBWJ,EAAK7B,SAASiC,YAlBjDjM,QAAQC,IAAR,8CAA2D,oCAC3DD,QAAQC,IAAIgM,IAoBO,kBAAM,GAIjB,GAAIJ,EAAK7B,SAASiC,aAAeJ,EAAK7B,SAASiC,YAAYE,MACvDN,EAAK7B,SAASiC,YAAYE,KAAKC,SAAS,UAExC,OADApM,QAAQC,IAAR,mDAAwD4L,EAAK7B,SAASc,MAAQ,oCACvE,SAACvG,GAAD,OACH,qBAA4BE,UAAU,iBAAtC,SACKsF,EAAK8B,EAAL9B,CAAWxF,IADNsH,EAAK7B,SAASlJ,KAMhC,QAA2BuL,IAAvBR,EAAK7B,SAASc,MAA4C,MAAtBe,EAAK7B,SAASc,KAClD,OAAOf,EAAK8B,GAIgB,QAA5BA,EAAK7B,SAAS8B,KAAKC,MACnB/L,QAAQC,IAAR,kDAAuD4L,EAAK7B,SAASc,MAAQ,oCAIjD,SAA5Be,EAAK7B,SAAS8B,KAAKC,MACnB/L,QAAQC,IAAR,qDAA0D4L,EAAK7B,SAASc,MAAQ,oCA/CrE,IAACmB,EAmDpB,OAAOlC,EAAK8B,O,WEvDdS,GAAa,SAACxB,GAChB,GAAIA,EAAM,CACN,IAAMyB,EAAWzB,EAAK0B,MAAM,MAAMC,QAAO,SAACC,EAAUC,GAAX,OAAoBD,EAAYC,EAAKC,MAAM,EAAG,KAAI,IAC3F,OAAIL,EAAS5K,OAAS,EACX4K,EAASM,UAAU,EAAG,GAAGC,cAEzBhC,EAAK+B,UAAU,EAAG,GAAGC,cAGpC,MAAO,IAmEIC,GAhEgB,WAC3B/M,QAAQC,IAAI,4BA4DZ,OAzDyB,kBAAM,SAAC8J,GAAD,OAAe,SAAC8B,GAC3C7L,QAAQC,IAAR,sBACA,MAWI4L,EAVA7B,SAEQmC,EAHZ,EAEQF,YACIE,KAGAvC,EANZ,EAKQkC,KACIlC,KAEJkB,EARR,EAQQA,KAEJkC,EACAnB,EADAmB,SAKJ,OAFAhN,QAAQC,IAAI4L,GAERM,GAAQA,EAAKC,SAAS,WACtBpM,QAAQC,IAAR,8CAAmD6K,IAI/C,8BACI,cAAC,KAAD,CAAapG,MAAM,MAAM0E,KAAM,aAK1BiD,IAAbW,GAAuC,OAAbA,IAOzBA,EAUDA,GACAhN,QAAQC,IAAR,gDAAqD6K,IAEjD,qBAAKrG,UAAU,kBAAf,SACI,oBAAGA,UAAU,2BAAb,cAA0C6H,GAAW1C,IAAS,KAA9D,WAKLG,EAAK8B,IAlBR7L,QAAQC,IAAR,6CAAkD6K,IAE9C,qBAAKrG,UAAU,kBAAf,SACI,oBAAGA,UAAU,2BAAb,cAA0C6H,GAAW1C,GAArD,gB,SDzDf+B,K,kBAAAA,E,yBAAAA,E,aAAAA,Q,KAML,IEEKsB,GFwCYC,GA7BsB,WA0BnC,OAzBiC,kBAAM,SAACnD,GAAD,OAAe,SAAC8B,GACnD7L,QAAQC,IAAR,gCAA6C,oCAC7CD,QAAQC,IAAI4L,GAEZ,IAAIsB,EAAe,IAlBF,SAACtB,GACtB,OAAOA,EAAK7B,SAASiC,aAAeJ,EAAK7B,SAASiC,YAAYE,MAC9DN,EAAK7B,SAASiC,YAAYE,KAAKC,SAAS,UAiBhCgB,CAAiBvB,IAdL,SAACA,GACrB,MAAmC,QAA5BA,EAAK7B,SAAS8B,KAAKC,KAeXsB,CAAgBxB,GAZR,SAACA,GACxB,MAAmC,SAA5BA,EAAK7B,SAAS8B,KAAKC,KAaXuB,CAAmBzB,KAC1BsB,EAAe,YAFfA,EAAe,QAFfA,EAAe,SAOnBnN,QAAQC,IAAR,iDAAsDkN,EAAtD,aAAuEtB,EAAK7B,SAASc,MAAQ,oCAGzFe,EAAK0B,YAAc5B,GAAW6B,KAC9BxN,QAAQC,IAAR,iDAAsDkN,EAAtD,mBAAqF,oCAC9EtB,EAAK0B,YAAc5B,GAAW8B,QACrCzN,QAAQC,IAAR,iDAAsDkN,EAAtD,wBAA0F,oCACnFtB,EAAK0B,YAAc5B,GAAW+B,YACrC1N,QAAQC,IAAR,iDAAsDkN,EAAtD,uBAAyF,wCGzBtFQ,GAdW,SAACvJ,GAOvB,OACI,qBAAKwB,MAPK,CACVgI,SAAU,OACVC,QAAS,OACTC,WAAY,UAIZ,SACK1J,EAAMG,YCXbwJ,GAAU,SAACC,GAAsC,IAAnBC,EAAkB,uDAAP,GACrCC,EACF,qBAAKC,MAAM,6BACPC,QAAQ,gBACRxJ,MAAOqJ,EACPtJ,OAAQsJ,EAHZ,SAII,sBAAMI,EAAE,0iBAIVC,EACF,qBAAKH,MAAM,6BACPC,QAAQ,gBACRxJ,MAAOqJ,EACPtJ,OAAQsJ,EAHZ,SAII,sBAAMI,EAAE,8RAIVE,EACF,qBAAKJ,MAAM,6BACPC,QAAQ,gBACRxJ,MAAOqJ,EACPtJ,OAAQsJ,EAHZ,SAII,sBAAMI,EAAE,4FAIVG,EACF,qBAAKL,MAAM,6BACPC,QAAQ,gBACRxJ,MAAOqJ,EACPtJ,OAAQsJ,EAHZ,SAII,sBAAMI,EAAE,moBAIVI,EACF,qBAAKN,MAAM,6BACPC,QAAQ,gBACRxJ,MAAOqJ,EACPtJ,OAAQsJ,EAHZ,SAII,sBAAMI,EAAE,kUAIVK,EACF,qBAAKP,MAAM,6BACPC,QAAQ,gBACRxJ,MAAOqJ,EACPtJ,OAAQsJ,EAHZ,SAII,sBAAMI,EAAE,sXAIVM,EACF,qBAAKR,MAAM,6BACPC,QAAQ,gBACRxJ,MAAOqJ,EACPtJ,OAAQsJ,EAHZ,SAII,sBAAMI,EAAE,whBAIVO,EACF,qBAAKT,MAAM,6BACPC,QAAQ,gBACRxJ,MAAOqJ,EACPtJ,OAAQsJ,EAHZ,SAII,sBAAMI,EAAE,qrBAIVQ,EACF,qBAAKV,MAAM,6BACPC,QAAQ,gBACRxJ,MAAOqJ,EACPtJ,OAAQsJ,EAHZ,SAII,sBAAMI,EAAE,gVAIVS,EACF,qBAAKX,MAAM,6BACPC,QAAQ,gBACRxJ,MAAOqJ,EACPtJ,OAAQsJ,EAHZ,SAII,sBAAMI,EAAE,mkBAIVU,EACF,qBAAKZ,MAAM,6BACPC,QAAQ,gBACRxJ,MAAOqJ,EACPtJ,OAAQsJ,EAHZ,SAII,sBAAMI,EAAE,+nBAIVW,EAA8C,CAChD,IAAOV,EACP,KAAQA,EACR,KAAQA,EACR,MAASO,EACT,IAAOA,EACP,IAAOJ,EACP,IAAOM,EACP,KAAQA,EACR,KAAQT,EACR,IAAOO,EACP,IAAOJ,EACP,KAAQA,EACR,KAAQA,EACR,IAAOA,EACP,IAAOI,EACP,KAAQA,EACR,IAAOA,EACP,IAAOA,EACP,IAAOP,EACP,IAAOA,EACP,IAAOO,EACP,IAAOA,EACP,IAAOA,EACP,IAAOA,EACP,IAAOH,EACP,IAAOJ,EACP,IAAOK,EACP,IAAOF,EACP,IAAOG,EACP,KAAQA,EACR,GAAMC,EACN,IAAOX,EACP,IAAOW,EACP,IAAOX,EACP,SAAUA,EACV,IAAOA,EACP,IAAOK,EACP,IAAOO,EACP,KAAQA,EACR,IAAOR,EACP,KAAQO,EACR,IAAOP,EACP,IAAOO,EACP,IAAOL,EACP,KAAQA,EACR,IAAON,EACP,KAAQA,EACR,KAAMA,GAGJe,EAAMjB,EAAUkB,WAAW,KAAOlB,EAAUpB,MAAM,GAAKoB,GAAa,GACpEmB,EAAOH,EAAsBC,EAAIlP,gBAAkBwO,EACzD,OAAOY,GAoBIC,GAbQ,SAAChL,GACpB,IAAMiL,EAAgBjL,EAAMwF,KAAKiD,UAAUzI,EAAMwF,KAAK0F,YAAY,KAAO,EAAGlL,EAAMwF,KAAKjI,SAAWyC,EAAMwF,KAKxG,OACI,qBAAKhE,MALK,CACV2J,QAAS,aAIT,SACKxB,GAAQsB,MFpKfG,GAAa,oCACbC,GAAkB,iDAClBC,GAAkB,0E,SAEnBzC,K,4CAAAA,Q,KAIL,IAAM0C,GAAoC,CACtC,0CACA,uCACA,sCACA,yCACA,2CACA,wCACA,wCAQJ,SAASC,GAAgB/D,EAAWgE,GAChC,IAAQ7F,EAAyB6B,EAAzB7B,SAAU8F,EAAejE,EAAfiE,WAEZC,EAAoB7F,OAAO8F,OAAO,GAAIF,GAC5CC,EAAkBE,YAAcJ,EAAcI,YAC9CF,EAAkBG,aAAeL,EAAcK,aAE/C,IAAMC,EAAqBnG,EAASoG,YAAYlP,KAAI,SAACmP,GAAD,OAChDA,IAAWP,EAAaC,EAAoBM,KAG1CC,EAAkBpG,OAAO8F,OAAO,GAAIhG,GAG1C,OAFAsG,EAAgBF,YAAcD,EAEvB,CACHnG,SAAUsG,EACVR,WAAYC,GAIpB,IG3CKQ,GH+HUC,GApFoB,WAC/BxQ,QAAQC,IAAI,gCAgFZ,OA9E6B,kBAAM,SAAC8J,GAAD,OAAe,SAAC8B,GAC/C7L,QAAQC,IAAR,4BAAyC,oCACzCD,QAAQC,IAAI4L,GAEZ,IAAoBuE,EAA8BvE,EAA1C7B,SAAYoG,YAAeN,EAAejE,EAAfiE,WAGnC,IAAKM,IAAgBA,EAAYzO,SAAWmO,EACxC,OAAO/F,EAAK8B,GAIhB,MAA+BiE,GAAc,CAAEW,QAAS,GAAIR,YAAa,IAAnEQ,EAAN,EAAMA,QAASR,EAAf,EAAeA,YACTjP,GAASyP,GAAW,CAAEzP,KAAM,KAA5BA,KAGN,IAAKA,GAAQyP,GAAWd,GAAkCvD,SAAS6D,GAC/D,IAEIjP,GADAyP,EAAU7P,KAAKC,MAAM4P,IACNzP,KACf6K,EAAKiE,WAAWW,QAAUA,EAC5B,MAAOC,IAKb,GAAa,iBAAT1P,GAA2B2O,GAAkCvD,SAAS6D,GACtE,OAAOlG,EAAK8B,GAGZA,EAAK7B,SAASiC,aAAeJ,EAAK7B,SAASiC,YAAY0E,eACvDb,EAAWc,WAAa/E,EAAK7B,SAASiC,YAAY0E,eAAeb,EAAWlG,MACrEkG,EAAWe,iBAClBf,EAAWc,WAAad,EAAWe,gBAGvC,IAAMC,EAAiBtB,GAAWuB,KAAKjB,EAAWlG,MAC5CoH,EAAiBvB,GAAgBsB,KAAKjB,EAAWlG,MACjDqH,EAAiBvB,GAAgBqB,KAAKjB,EAAWlG,MAGvD,GAAIkH,EAAgB,CAChB,IAAMI,EAActB,GAAgB/D,EAAM,CAAEoE,YAAahD,GAAUkE,gBAAiBjB,kBAAc7D,IAClG,OACI,gCACKR,GAAQ9B,EAAK8B,GACd,eAAC,GAAD,WACI,cAAC,GAAD,CAAgBjC,KAAMkG,EAAWlG,OAChCsH,GAAenH,EAAKmH,SAOrC,IAAIF,GAAkBC,IACdpF,EAAK7B,SAASoH,YAAcvF,EAAK7B,SAASoH,aAAe3H,EAA+B,CACxF,IAAMyH,EAActB,GAAgB/D,EAAM,CAAEoE,YAAahD,GAAUkE,gBAAiBjB,kBAAc7D,IAClG,OACI,gCACKR,GAAQ9B,EAAK8B,GACd,eAAC,GAAD,WACI,cAAC,GAAD,CAAgBjC,KAAMkG,EAAWlG,OAChCsH,GAAenH,EAAKmH,SAOzC,OACI,eAAC,GAAD,WACI,cAAC,GAAD,CAAgBtH,KAAMkG,EAAWlG,OAChCG,EAAK8B,W,SGvHjB0E,K,kBAAAA,E,uBAAAA,Q,SAKCc,G,WACF,WAA4BC,GAAyB,yBAAzBA,oB,8CAE5B,SAAkB7N,GACd,MVPyC,sCUOlCA,EAAOzC,MACXyC,EAAOE,SACPF,EAAOE,QAAQqG,UACfvG,EAAOE,QAAQqG,SAASiC,c,mBAG/B,SAAaxI,GACT,IAAM8N,EAAY,gBACZC,EAAkB,eAElBvH,EAAaxG,EAmBnB,OAlBIwG,EAAWtG,QAAQqG,SAASiC,YAAYE,MACnClC,EAAWtG,QAAQqG,SAASiC,YAAYE,KAAKC,SAASmF,IACvDtH,EAAWtG,QAAQqG,SAASiC,YAAYE,KAAKtM,KAAK0R,GAGjDtH,EAAWtG,QAAQqG,SAASiC,YAAYE,KAAKC,SAASoF,IACvDvH,EAAWtG,QAAQqG,SAASiC,YAAYE,KAAKtM,KAAK2R,KAGtDvH,EAAWtG,QAAQqG,SAASiC,YAAYE,KAAO,CAACoF,GAChDtH,EAAWtG,QAAQqG,SAASiC,YAAYE,KAAKtM,KAAK2R,IAGtDvH,EAAWtG,QAAQqG,SAASiC,YAAYwF,SAAW,CAC/CC,aAAcnB,GAAaoB,QAC3BC,SAAU9P,KAAKwP,kBAAkBM,UAG9B,CACHrH,eAAgB,KAChBN,WAAYA,O,KAUT4H,GALqB,SAACP,GAEjC,OADAtR,QAAQC,IAAI,iCACL,IAAIoR,GAAsBC,ICnDxBQ,GAAb,kCAAaA,GACKC,gBAA0B,EAD/BD,GAEKE,qBAA+B,EAFpCF,GAGKG,kBAA4B,EAHjCH,GAIKI,iBAA2B,EAG7C,IAgBeC,GAhBiB,SAACC,GAC7B,IAAMC,EAA4BD,EAAD,yBAE3BL,EAAmBK,EAAD,gBAClBJ,EAA8F,SAAxEK,EAAwB,0CAA0D,EACxGJ,EAA0E,cAAvDI,EAAwB,yBAA8C,EACzFH,EAA0E,cAAvDG,EAAwB,wBAAwG,SAA1DA,EAAwB,4BAA6C,EAOpK,OALAP,GAAqBC,gBAAkBO,SAASP,IAAoB,EACpED,GAAqBE,oBAAsBA,EAC3CF,GAAqBG,iBAAmBA,EACxCH,GAAqBI,gBAAkBA,EAEhCJ,ICsBIS,GAxCyB,WAAiC,IAAhCC,EAA+B,uDAAb,aACvDxS,QAAQC,IAAI,qCAEZ,IAAMwS,EAA4B,kBAAM,SAAC1I,GAAD,OAAe,SAAC8B,GACpD7L,QAAQC,IAAR,iCAA8C,oCAC9CD,QAAQC,IAAI4L,GAEZ,IACI6G,EAEA7G,EAFA6G,aACAC,EACA9G,EADA8G,QAGJ,IAAKD,GAA0D,IAAzCZ,GAAqBC,kBAA0BY,EACjE,OAAO,KAGX,IAAMC,EAAS1I,OAAOC,KAAKuI,GAAcxR,KAAI,SAAA+N,GAAG,OAAIyD,EAAazD,MAIjE,OAHmB2D,EAAOC,QAAO,SAACC,GAAD,MAA0B,SAAfA,EAAM/G,QAGnCpK,QAAmD,IAAzCmQ,GAAqBC,kBAA0BY,GACpEH,IACO,MAIPI,GAAUA,EAAOjR,OAAS,GACtB,sBAAK8C,UAAU,2BAAf,UACI,qBAAKA,UAAU,SAASmB,MAAO,CAAEmN,WAAY,aAC7C,qBAAKtO,UAAU,SAASmB,MAAO,CAAEmN,WAAY,aAC7C,qBAAKtO,UAAU,SAASmB,MAAO,CAAEmN,WAAY,aAC7C,8CAAUH,EAAO,GAAGhJ,MAAQ,QAA5B,8BAMhB,OAAO6I,GCdIO,GAzBgB,WAC7B,IAAM1B,EAAoB,CACxB2B,MAAOC,uCACPC,OAAQD,uDACRtB,SAAUsB,wCAGNE,EAAY,IAAIC,gBAAgBC,OAAOC,SAASC,QAetD,OAZgC,OAA5BJ,EAAUK,IAAI,YAChBnC,EAAkB6B,OAASC,EAAUK,IAAI,WAGZ,OAA3BL,EAAUK,IAAI,WAChBnC,EAAkB2B,MAAQG,EAAUK,IAAI,UAGR,OAA9BL,EAAUK,IAAI,cAChBnC,EAAkBM,SAAWwB,EAAUK,IAAI,aAGtCnC,GCFMoC,GApBc,WACzB,IAAMC,EAAkB,CACpBC,UAAW,CACPC,SAAS,EACTC,iBAAkB,KAIpBV,EAAY,IAAIC,gBAAgBC,OAAOC,SAASC,QAStD,OARmC,OAA/BJ,EAAUK,IAAI,eACdE,EAAgBC,UAAUC,QAAwC,QAA9BT,EAAUK,IAAI,cAGZ,OAAtCL,EAAUK,IAAI,sBACdE,EAAgBC,UAAUE,iBAAmBV,EAAUK,IAAI,qBAAuB,IAG/EE,GCJII,GAbY,WACvB,IAAMC,EAAgB,CAClBH,SAAS,GAGPT,EAAY,IAAIC,gBAAgBC,OAAOC,SAASC,QAKtD,OAJiC,OAA7BJ,EAAUK,IAAI,aACdO,EAAcH,QAAsC,SAA5BT,EAAUK,IAAI,YAGnCO,GCGIC,GAbU,WACrB,IAAMC,EAAc,CAChBL,SAAS,GAGPT,EAAY,IAAIC,gBAAgBC,OAAOC,SAASC,QAKtD,OAJ+B,OAA3BJ,EAAUK,IAAI,WACdS,EAAYL,QAAoC,QAA1BT,EAAUK,IAAI,UAGjCS,GCGIC,GAbkB,WAC7B,IAAMC,EAA2B,CAC7BC,YAAa,MAGXjB,EAAY,IAAIC,gBAAgBC,OAAOC,SAASC,QAKtD,OAJwC,OAApCJ,EAAUK,IAAI,oBACdW,EAAoBC,YAAcjB,EAAUK,IAAI,mBAAqB,MAGlEW,GCkBL9C,I,QAAyB0B,MACzBW,GAAuBD,KACvBM,GAAqBD,KACrBG,GAAmBD,KACnBG,GAA2BD,KAEjCnU,QAAQC,IAAR,yBAAsC,uCACtCD,QAAQC,IAAIqR,IAEZtR,QAAQC,IAAR,uBAAoC,uCACpCD,QAAQC,IAAI0T,IAEZ3T,QAAQC,IAAR,qBAAkC,uCAClCD,QAAQC,IAAI+T,IAEZhU,QAAQC,IAAR,mBAAgC,uCAChCD,QAAQC,IAAIiU,IAEZ,IAAMI,GAAwBvH,KACxBwH,GAA0B3I,KAC1B4I,GAAgCtH,KAChCuH,GAA6B5C,GAA4BP,IACzDoD,GAA4BlE,KAE5BmE,GAAsB,CAC1BC,mBAAoB,GACpBC,cAAe,GACfC,gBAAiB,GAEjBC,2BAA4B,GAC5BC,sBAAuB,GACvBC,wBAAyB,GACzBC,yBAA0B,sBAgUbC,OAzTf,WACE,MAA0BC,qBAAWpR,GAA9BR,EAAP,EAAOA,MAAOc,EAAd,EAAcA,SACd,EAA8B6B,qBAA9B,mBAAOkP,EAAP,KAAgBC,EAAhB,KACA,EAA8CnP,wBAAckG,GAA5D,mBAAOkJ,EAAP,KAAwBC,EAAxB,KACA,EAA0CrP,wBAASkG,GAAnD,mBAAOoJ,EAAP,KAAsBC,EAAtB,KACA,EAA8CvP,wBAASkG,GAAvD,mBAAOsJ,EAAP,KAAwBC,EAAxB,KACA,EAAsCzP,wBAAckG,GAApD,mBAAOwJ,EAAP,KAAoBC,EAApB,KACA,EAAwC3P,wBAASkG,GAAjD,mBAAO0J,EAAP,KAAqBC,EAArB,KACA,EAAkC7P,wBAASkG,GAA3C,mBAAO/E,EAAP,KAAkB2O,EAAlB,KACA,EAAwD9P,wBAASkG,GAAjE,mBAAOjF,EAAP,KAA6B8O,EAA7B,KACA,EAAkE/P,wBAASkG,GAA3E,mBAAOoG,GAAP,KAAkC0D,GAAlC,KACA,GAAkDhQ,oBAAS,GAA3D,qBAAOiQ,GAAP,MAA0BC,GAA1B,MAEApP,qBAAU,WACR,IAAMC,EAAI,uCAAG,sCAAAC,EAAA,6DACLmP,EADK,2BAEN3C,IAFM,IAGT4C,cAAe,CACb1C,SAAS,MAIPwB,EAAU,IAAImB,qBAAmBlF,GAAmBgF,IAElDG,UAAUvC,GAAYL,SAVnB,SAYLwB,EAAQ9N,aAZH,cAaX+N,EAAWD,GAbA,SAekBA,EAAQqB,oBAf1B,UAeLtE,EAfK,OAgBXD,GAAwBC,IAElBmD,EAAkBoB,aAAaC,QAAQ,qBACtB1M,OAAOC,KAAKvJ,KAAKC,MAAM0U,IAAkB5T,OAAS,IACvE3B,QAAQC,IAAI,qBACZD,QAAQC,IAAIsV,GACZC,EAAmBD,KAGhBF,EAAgBwB,sBAAyB7C,GAAcH,QAzBjD,4CA2B0BwB,EAAgBwB,uBA3B1C,SA2BDC,EA3BC,QA4BWL,UAAS,GAC3BP,EAAwBY,GACxB9W,QAAQC,IAAI,4BA9BL,mDAgCPD,QAAQC,IAAR,mDAhCO,yBAoCeoV,EAAQ0B,kBAAiB,GApCxC,SAoCPtB,EApCO,UAsCTzV,QAAQgX,KAAK,mBAxDMC,EAyDexB,EAAlCA,EAxDC7U,KAAKC,MAAMoW,EAAaC,WAAW,QAAS,MAyD7ClX,QAAQC,IAAIwV,GACZC,EAAiBD,IAzCR,kCAlBS,IAACwB,IAkBV,sBAAH,qDA6CVjX,QAAQC,IAAIuD,GACZ0D,MACC,IAEH,IAAMiQ,GAAeC,mBAAQ,8BAAC,eACzBzC,IADwB,IAE3B0C,kBAAmBvF,GAAqBE,oBACxCsF,YAAalB,OACX,CAACtE,GAAqBE,oBAAqBoE,KAEzCmB,GAAerP,uBAAY,SAAChG,GAChClC,QAAQC,IAAR,yBAA8BiC,EAAQuO,UACtCnM,EAAS,CAACtD,KAAMzB,EAAWwE,YAAaJ,SAAS,MAChD,CAACW,IAEEkT,GAAgBtP,uBAAY,WAChClI,QAAQC,IAAR,qBACC,IAEGwX,GAAoBvP,uBAAY,WACpClI,QAAQC,IAAR,uBACAoW,IAAqB,KACpB,IAEGqB,GAAYxP,sBAAW,uCAAC,WAAOyP,GAAP,yCAAAxQ,EAAA,yDAAUyQ,EAAV,+BAA2B,IACnDpU,EAAMN,eADkB,wDAK5BlD,QAAQC,IAAI,eAENwS,EAAiCF,IAAgC,WAC9D,OAAP8C,QAAO,IAAPA,KAAS7C,qBAGX2D,IAA6B,kBAAM1D,KAXP,gBAaG4C,QAbH,IAaGA,OAbH,EAaGA,EAASwC,sBAbZ,UAatBhN,EAbsB,OActBiN,EAAQpN,KACdsL,EAAgB8B,EAAMC,UAEtBD,EAAME,UAAU,cAAexM,GAA4BX,IAC3DiN,EAAME,UAAU,cAAevD,IAG3Bc,GAAmBrL,OAAOC,KAAKvJ,KAAKC,MAAM0U,IAAkB5T,OAAS,IACvE3B,QAAQC,IAAI,qBACZ2X,EAAerC,gBAAkB3U,KAAKC,MAAM0U,IAG9CjR,EAAS,CAACtD,KAAMzB,EAAWmE,iBAAkBC,SAAS,KAElDmO,GAAqBI,kBAAmBkC,GAAoBC,YA5BpC,yCA8BSgB,QA9BT,IA8BSA,OA9BT,EA8BSA,EAAS4C,wBAAwB,CAClE5D,YAAaD,GAAoBC,cA/BT,SAmC1B,QALM6D,EA9BoB,cAmC1B,IAAIA,OAAJ,EAAIA,EAAsBC,cACxB7E,OAAOC,SAAShI,QAAhB,OAAwB2M,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAsBC,cAGhD,OAAID,QAAJ,IAAIA,OAAJ,EAAIA,EAAsB7D,eACxBuD,EAAevD,YAAf,OAA6B6D,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAsB7D,aAxC3B,YA6CxBkB,GAAoBE,IAAiBrB,GAAoBC,YA7CjC,wBA8C1B/P,EAAS,CAACtD,KAAMzB,EAAWwE,YAAaJ,SAAS,IA9CvB,2BAiDlB0R,QAjDkB,IAiDlBA,OAjDkB,EAiDlBA,EAASqC,UAAUE,GAjDD,kEAmDxB5X,QAAQC,IAAR,gCAAqC,KAAMiC,UAnDnB,mDAwDOmT,QAxDP,IAwDOA,OAxDP,EAwDOA,EAAS+C,4BAxDhB,eAwDpBC,EAxDoB,SAyDAnO,OAAOC,KAAKkO,GAAoB1W,SACxD3B,QAAQC,IAAI,wBACZD,QAAQC,IAAIoY,GACZ1B,aAAa2B,QAAQ,kBAAmB1X,KAAK2X,UAAUF,KAGlD,OAAPhD,QAAO,IAAPA,KAASkC,aAAaA,GAAc,CAACiB,WAAW,IACzC,OAAPnD,QAAO,IAAPA,KAASmC,cAAcA,IAChB,OAAPnC,QAAO,IAAPA,KAASoC,kBAAkBA,IAjED,iBAmEApC,QAnEA,IAmEAA,OAnEA,EAmEAA,EAASoD,oBAnET,WAmEpB5C,EAnEoB,OAqE1BC,EAAeD,GACfvR,EAAS,CAACtD,KAAMzB,EAAWwE,YAAaJ,SAAS,MAtEvB,OAwErB0R,QAxEqB,IAwErBA,OAxEqB,EAwErBA,EAAiBwB,sBAxEI,yCAyEKxB,QAzEL,IAyEKA,OAzEL,EAyEKA,EAASqD,eAzEd,QAyElBpR,EAzEkB,OA0ExB2O,EAAa3O,GA1EW,2DAAD,sDA6E1B,CAAC+N,EAAS7R,EAAOc,EAAUmT,GAAmBF,GAAcC,GAAejC,EAAiBE,IAEzFkD,GAAUzQ,sBAAW,sBAAC,sBAAAf,EAAA,6DAC1BnH,QAAQC,IAAI,aADc,gBAEpBoV,QAFoB,IAEpBA,OAFoB,EAEpBA,EAASsD,UAFW,OAG1B9C,EAAY+C,KAAO/C,EAAY+C,MAG/B,OAACxR,QAAD,IAACA,KAA8ByR,QAC/B/C,OAAezJ,GACf4J,OAAa5J,GACbmJ,OAAmBnJ,GACnBqJ,OAAiBrJ,GACjBuJ,OAAmBvJ,GACnBgK,IAAqB,GACrBM,aAAamC,WAAW,mBACxBxU,EAAS,CAACtD,KAAMzB,EAAWmE,iBAAkBC,SAAS,IAd5B,4CAezB,CAAC0R,EAASQ,EAAavR,EAAU8C,IAE9B2R,GAAqB7Q,sBAAW,sBAAC,4BAAAf,EAAA,6DACrCnH,QAAQC,IAAI,wBADyB,gBAEZoV,QAFY,IAEZA,OAFY,EAEZA,EAAS2D,wBAFG,OAE/BC,EAF+B,OAGrCjZ,QAAQC,IAAIgZ,GAHyB,2CAIpC,CAAC5D,IAEE6D,GAAkBhR,sBAAW,sBAAC,4BAAAf,EAAA,6DAClCnH,QAAQC,IAAI,qBACNkZ,EAAsB,CAC1BC,aAAclG,cACdmG,kBAAmB,cAJa,gBAM5BhE,QAN4B,IAM5BA,OAN4B,EAM5BA,EAASiE,wBAAwBH,GANL,2CAOjC,CAAC9D,IAEEkE,GAAsBrR,uBAAY,WACtC,IAAMtG,EAAY,IAAI1B,EAChB+W,EAAe,IAAIuC,eACnBnZ,EAAU,IAAIoZ,uBAGpBpZ,EAAQqZ,eAAiB,SAACvZ,EAAsBC,EAAaC,GAC3DuB,EAAU+X,qBAAqBxZ,EAASC,EAAQC,IAGlD4W,EAAapW,MAAM4U,EAAepV,GAElC4W,EAAa2C,gBAAb,+BAAAzS,EAAA,MAA+B,WAAO1D,GAAP,2BAAA0D,EAAA,yDACrBlG,EAASgW,EAAa4C,eACtBC,EAAkBlY,EAAUkY,gBAAgB7Y,GAElDjB,QAAQC,IAAR,4BAAiC6Z,IAE5BA,EANsB,wDAUrBnE,EAAmBlS,EAAesW,KACxCnE,EAAmBD,GAEbiC,EAAsB,GACxBjC,IACFiC,EAAejC,gBAAkBA,GAGnCrR,EAAS,CAACtD,KAAMzB,EAAWwE,YAAaJ,SAAS,IAlBtB,2BAqBnB0R,QArBmB,IAqBnBA,OArBmB,EAqBnBA,EAASqC,UAAUE,GArBA,kEAuBzB5X,QAAQC,IAAR,gCAAqC,KAAMiC,UAvBlB,mDA4BGmT,QA5BH,IA4BGA,OA5BH,EA4BGA,EAAS+C,4BA5BZ,eA4BrB7C,EA5BqB,SA6BJrL,OAAOC,KAAKoL,GAAiB5T,QAClDgV,aAAa2B,QAAQ,kBAAmB1X,KAAK2X,UAAUhD,IAGlD,OAAPF,QAAO,IAAPA,KAASkC,aAAaA,GAAc,CAACiB,WAAW,IACzC,OAAPnD,QAAO,IAAPA,KAASmC,cAAcA,IAChB,OAAPnC,QAAO,IAAPA,KAASoC,kBAAkBA,IAnCA,iBAqCDpC,QArCC,IAqCDA,OArCC,EAqCDA,EAASoD,oBArCR,WAqCrB5C,EArCqB,OAuC3BC,EAAeD,GACfvR,EAAS,CAACtD,KAAMzB,EAAWwE,YAAaJ,SAAS,MAxCtB,OA0CtB0R,QA1CsB,IA0CtBA,OA1CsB,EA0CtBA,EAAiBwB,sBA1CK,yCA2CIxB,QA3CJ,IA2CIA,OA3CJ,EA2CIA,EAASqD,eA3Cb,QA2CnBpR,EA3CmB,OA4CzB2O,EAAa3O,GA5CY,2DAA/B,sDAgDA,IAAM0S,EAAe/C,EAAagD,SAClC,OAAO,qBAAKC,IAAK,SAACC,GAChBA,GAAKA,EAAEC,YAAcD,EAAEE,YAAYF,EAAEC,YACrCJ,GAAgBG,GAAKA,EAAEG,YAAYN,QAEpC,CAAC3E,EAASI,IAEb,OACE,qCACE,+BAEKjS,EAAMN,gBAAkB,cAAC,EAAD,CAAY4B,QAAS4S,OAIhDlU,EAAMN,gBAAkB,sBAAKuB,UAAW2R,GAAkB,2BAAD,iBAAjC,UACtB,cAAC,EAAD,CACEpR,MAAO,yBACPF,QAAS6T,OAGPpD,IAAoBrL,OAAOC,KAAKoL,GAAiB5T,SAAW8T,IAAkBE,GAAmB4D,KAGnG/V,EAAMF,WAAa,cAAC,EAAD,KAGlB0Q,GAAcH,SAAWzM,GAAwBE,GAAa,cAAC,EAAD,CAC7DF,qBAAsBA,EACtBC,SAAQ,OAAEgO,QAAF,IAAEA,OAAF,EAAEA,EAAShO,SACnBC,UAAWA,KAIZ9D,EAAMF,WAAaE,EAAMN,gBAAkB2S,GAAeE,GAAgBxB,IAAsB9B,IAA6B,cAAC,IAAD,CAC5H8B,mBAAoBA,GACpBD,iBAAkBA,GAClBE,yBAA0BA,GAC1B/B,0BAA2BA,GAC3BiC,qBAAsBA,GACtB6F,OAAO,eACPC,WAAY3E,EACZ4E,qBAAqB,EACrB3C,MAAO/B,EACPoB,aAAcA,MAIf3T,EAAMF,WAAaE,EAAMN,gBAAkB2S,GAAe,cAAC,EAAD,CACzDxM,gBAAiB0P,GACjBvP,uBAAwB0P,YCrWvBwB,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASlB,OACP,cAAC,IAAMmB,WAAP,UACE,cAAC,EAAD,UACE,cAAC,GAAD,QAGJ7Z,SAASwB,eAAe,SAM1B2X,M","file":"static/js/main.6bf55892.chunk.js","sourcesContent":["import React, {createContext, useReducer, Context} from 'react';\n\nenum ActionType {\n  SET_CHAT_STARTED,\n  SET_MESSAGES,\n  SET_TYPING,\n  SET_AGENT_END_SESSION_EVENT,\n  SET_LOADING\n}\n\ninterface IState {\n  hasChatStarted: boolean,\n  messages: any[],\n  isTyping: boolean,\n  agentEndSessionEvent: boolean,\n  isLoading: boolean\n}\n\ninterface StoreContext {\n  state: IState,\n  dispatch: React.Dispatch<any>\n}\n\nconst initialState = {\n  hasChatStarted: false,\n  messages: [] as any,\n  isTyping: false,\n  agentEndSessionEvent: false,\n  isLoading: false\n};\n\nconst Reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case ActionType.SET_CHAT_STARTED:\n      return {\n        ...state,\n        type: action.type,\n        hasChatStarted: action.payload\n      }\n    case ActionType.SET_MESSAGES:\n      return {\n        ...state,\n        type: action.type,\n        messages: action.payload\n      };\n    case ActionType.SET_TYPING:\n      return {\n        ...state,\n        type: action.type,\n        isTyping: action.payload\n      }\n    case ActionType.SET_AGENT_END_SESSION_EVENT:\n      return {\n        ...state,\n        type: action.type,\n        agentEndSessionEvent: action.payload\n      }\n    case ActionType.SET_LOADING:\n      return {\n        ...state,\n        type: action.type,\n        isLoading: action.payload\n      }\n    default:\n      return state;\n  }\n};\n\nconst Store:Context<StoreContext> = createContext({} as StoreContext);\nconst { Provider } = Store;\n\nconst StateProvider = (props: { children: React.ReactNode; }) => {\n  const [state, dispatch] = useReducer(Reducer, initialState);\n  return <Provider value={{state, dispatch} as any}>{props.children}</Provider>;\n}\n\nexport {\n  Store,\n  StateProvider,\n  ActionType\n}","import { CardElement, Input, SerializationContext } from 'adaptivecards';\r\n\r\nconst debug: boolean = false;\r\nconst pushButtonSelector = \"button.ac-pushButton\";\r\nconst errorAlertPrefix = 'error-alert';\r\n\r\nclass RequiredFieldValidator {\r\n\r\n    /**\r\n     * Validates input.\r\n     *\r\n     * @param value Value\r\n     * @param errors List of errors\r\n     * @returns Whether input value is valid or not\r\n     */\r\n    public validate(value: string, errors: string[]): boolean {\r\n        debug && console.log(`[validate]`);\r\n        const isValid = !!value;\r\n\r\n        if (!isValid) {\r\n            errors.push('A required field cannot be empty');\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n}\r\n\r\nclass RequiredBooleanFieldValidator {\r\n    /**\r\n     * Validates input.\r\n     *\r\n     * @param value Value\r\n     * @param errors List of errors\r\n     * @returns Whether input value is valid or not\r\n     */\r\n    public validate(value: string, errors: string[]): boolean {\r\n        debug && console.log(`[validate]`);\r\n        // console.log(value);\r\n        const isValid = !!value && value.toLowerCase() === \"true\";\r\n        console.log(isValid);\r\n        if (!isValid) {\r\n            errors.push('A required field cannot be empty');\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n}\r\n\r\nclass AdaptiveCardFieldsValidator {\r\n\r\n    /**\r\n     * Handler called on context.onParseElement() to add validators on every field.\r\n     *\r\n     * @param element Card element\r\n     * @param source Source\r\n     * @param context SerializationContext\r\n     * @returns\r\n     */\r\n    public attachFieldValidator(element: CardElement, source: any, context: SerializationContext) {\r\n        debug && console.log('[attachFieldValidator]');\r\n\r\n        if (!element.isInteractive) {\r\n            return;\r\n        }\r\n\r\n        (element as any).onValueChanged = (input: Input) => this.validateInput(input);\r\n\r\n        // Custom validators\r\n        (element as any).validators = [];\r\n\r\n        const id = JSON.parse(source.id);\r\n        const {IsRequired: isRequired} = id;\r\n        isRequired && (element as any).validators.push(new RequiredFieldValidator());\r\n\r\n        if (source.type === 'Input.Toggle') {\r\n            isRequired && (element as any).validators.push(new RequiredBooleanFieldValidator());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Validates on whether the survey can be submitted or not.\r\n     *\r\n     * @param inputs List of inputs\r\n     * @returns Response on whether the submit can be submitted\r\n     */\r\n    public canSubmitSurvey(inputs: Input[]): boolean {\r\n        debug && console.log('[onSubmit]');\r\n        const results = inputs.map((input: Input) => this.validateInput(input));\r\n        const valid = results.every((result: boolean) => result);\r\n        return valid;\r\n    }\r\n\r\n    /**\r\n     * Enable/disable submit button.\r\n     *\r\n     * @param enable Flag to whether enable/disable submit button\r\n     */\r\n     public enableSubmitButton(enable: boolean) {\r\n        const buttonElement = document.querySelector(pushButtonSelector);\r\n\r\n        if (enable) {\r\n            buttonElement?.removeAttribute('disabled');\r\n        } else {\r\n            buttonElement?.setAttribute('disabled', 'true');\r\n        }\r\n\r\n        buttonElement?.setAttribute('aria-disabled', enable? 'false': 'true');\r\n    }\r\n\r\n    /**\r\n     * Handler to validate input\r\n     *\r\n     * @param input Input\r\n     * @returns Whether input is valid or not\r\n     */\r\n    private validateInput(input: any): boolean {\r\n        debug && console.log(`[validateInput]`);\r\n        debug && console.log(input);\r\n\r\n        if (!input.validators.length) {\r\n            input.isValid = () => true;\r\n            return true;\r\n        }\r\n\r\n        const errors: any = [];\r\n\r\n        if (input.validators.length) {\r\n            input.isValid = () => input.validators.every((validator: any) => validator.validate(input.value, errors));\r\n        }\r\n\r\n        if (!input.isValid()) {\r\n            debug && console.log(\"[validateInput] Invalid!\");\r\n            this.enableSubmitButton(false);\r\n            this.renderErrors(input, errors);\r\n            return false;\r\n        } else {\r\n            debug && console.log(\"[validateInput] Valid!\");\r\n            this.enableSubmitButton(true);\r\n            this.removeErrors(input);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    private createErrorElement(message: string, id: string) {\r\n        const divElement = document.createElement('div');\r\n        divElement.id = id;\r\n        divElement.innerHTML = `\r\n            <span style=\"font-size: 16px; color: #a80000\">\r\n                &#9888;\r\n            </span>\r\n            <span style=\"font-size: 12px; color: #a80000\">\r\n                ${message}\r\n            </span>\r\n        `;\r\n        return divElement;\r\n    }\r\n\r\n    /**\r\n     *  Renders list of errors in the DOM.\r\n     *\r\n     * @param input Input\r\n     * @param errors List of errors to render\r\n     */\r\n    private renderErrors(input: any, errors: string[]) {\r\n        debug && console.log('[renderErrors]');\r\n\r\n        // Inject custom HTML elements with error messages\r\n        errors.forEach((error: string) => {\r\n            const elementId = `${errorAlertPrefix}-${input.id}`;\r\n            const errorElement = this.createErrorElement(error, elementId);\r\n            input.renderedElement.parentNode.insertBefore(errorElement, input.renderedElement.nextSibling);\r\n        });\r\n    }\r\n\r\n    /**\r\n     *  Remove list of errors from the DOM.\r\n     *\r\n     * @param input Input\r\n     */\r\n    private removeErrors(input: any) {\r\n        const divElement = document.getElementById(`${errorAlertPrefix}-${input.id}`);\r\n        divElement?.remove();\r\n    }\r\n}\r\n\r\nexport default AdaptiveCardFieldsValidator;","import Loader from 'react-loader-spinner';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport './Loading.css';\n\nfunction Loading () {\n    return (\n        <div className=\"loading\">\n            <Loader\n                type=\"Puff\"\n                color=\"#00BFFF\"\n                height={100}\n                width={100}\n            />\n        </div>\n    );\n}\n\nexport default Loading;","import React from \"react\";\nimport { MessageCircle } from \"react-feather\";\nimport './ChatButton.css';\n\ninterface ChatButtonProps {\n  onClick: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\n}\n\nfunction ChatButton(props: ChatButtonProps) {\n  return (\n    <div className=\"chat-button\" onClick={props.onClick}>\n      <MessageCircle color='white' />\n    </div>\n  );\n}\n\nexport default ChatButton;","import React from \"react\";\nimport { X } from \"react-feather\";\nimport './ChatHeader.css';\n\ninterface ChatHeaderProps {\n  title: string;\n  onClick: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n}\n\nfunction ChatHeader(props: ChatHeaderProps) {\n  return (\n    <div className=\"chat-header\">\n    <span> {props.title} </span>\n      <div onClick={props.onClick}>\n        <X />\n      </div>\n    </div>\n  );\n}\n\nexport default ChatHeader;","import React from \"react\";\nimport { PhoneOff, Video, Phone } from \"react-feather\";\nimport './IncomingCall.css';\n\ninterface IncomingCallProps {\n  rejectCall: (event: React.MouseEvent<SVGAElement, MouseEvent>) => void;\n  acceptVideoCall: (event: React.MouseEvent<SVGAElement, MouseEvent>) => void;\n  acceptVoiceCall: (event: React.MouseEvent<SVGAElement, MouseEvent>) => void;\n}\n\nfunction IncomingCall(props: IncomingCallProps) {\n  return (\n    <div className=\"incoming-call-pop-up\">\n      <span> Incoming call </span>\n      <div>\n        <PhoneOff className=\"reject-call-button\" onClick={props.rejectCall}/>\n        <Video className=\"accept-video-call-button\" onClick={props.acceptVideoCall} />\n        <Phone className=\"accept-voice-call-button\" onClick={props.acceptVoiceCall}/>\n      </div>\n    </div>\n  )\n}\n\nexport default IncomingCall;","import React, { useCallback, useEffect, useState } from 'react';\nimport { Mic, MicOff, PhoneOff, Video, VideoOff } from 'react-feather';\nimport IncomingCall from './IncomingCall';\nimport './Calling.css';\n\ninterface CallingProps {\n  VoiceVideoCallingSDK: any;\n  OCClient: any;\n  chatToken: any;\n}\n\nconst adjustWebChatHeightInVideoCall = () => {\n  console.log(`[WebChat][adjustWebChatHeightInVideoCall]`);\n  const webChatTranscriptContainer = document.getElementsByClassName('webchat__basic-transcript')[0] as HTMLElement;\n  const remoteVideoContainer = document.getElementById('remoteVideo') as HTMLElement;\n  const currentCallActionBar = document.getElementsByClassName('current-call-action-bar')[0] as HTMLElement;\n\n  const newHeight = webChatTranscriptContainer.clientHeight - remoteVideoContainer.clientHeight - currentCallActionBar.clientHeight;\n  webChatTranscriptContainer.style.marginTop = `${remoteVideoContainer.clientHeight + currentCallActionBar.clientHeight}px`;\n  webChatTranscriptContainer.style.height = `${newHeight}px`;\n}\n\nconst adjustWebChatHeightIncomingCall = () => {\n  console.log(`[WebChat][adjustWebChatHeightIncomingCall]`);\n  const webChatTranscriptContainer = document.getElementsByClassName('webchat__basic-transcript')[0] as HTMLElement;\n  const incomingCallContainer = document.getElementsByClassName('incoming-call-pop-up')[0] as HTMLElement;\n\n  const newHeight = webChatTranscriptContainer.clientHeight - incomingCallContainer.clientHeight;\n  webChatTranscriptContainer.style.height = `${newHeight}px`;\n}\n\nconst adjustWebChatHeightInVoiceCall = () => {\n  console.log(`[WebChat][adjustWebChatHeightInVoiceCall]`);\n  const webChatTranscriptContainer = document.getElementsByClassName('webchat__basic-transcript')[0] as HTMLElement;\n  const currentCallActionBar = document.getElementsByClassName('current-call-action-bar')[0] as HTMLElement;\n\n  const newHeight = webChatTranscriptContainer.clientHeight - currentCallActionBar.clientHeight;\n  webChatTranscriptContainer.style.marginTop = `${currentCallActionBar.clientHeight}px`;\n  webChatTranscriptContainer.style.height = `${newHeight}px`;\n}\n\nconst adjustWebChatHeightNoCall = () => {\n  console.log(`[WebChat][adjustWebChatHeightNoCall]`);\n  const webChatTranscriptContainer = document.getElementsByClassName('webchat__basic-transcript')[0] as HTMLElement;\n  webChatTranscriptContainer.style.marginTop = '';\n  webChatTranscriptContainer.style.height = '';\n}\n\nfunction Calling(props: CallingProps) {\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [incomingCall, setIncomingCall] = useState(false);\n  const [inVideoCall, setInVideoCall] = useState(false);\n  const [inVoiceCall, setInVoiceCall] = useState(false);\n  const [isMicrophoneMuted, setIsMicrophoneMuted] = useState(false);\n  const [isRemoteVideoEnabled, setIsRemoteVideoEnabled] = useState(false);\n  const [isLocalVideoEnabled, setIsLocalVideoEnabled] = useState(false);\n\n  useEffect(() => {\n    const init = async () => {\n      const {VoiceVideoCallingSDK, OCClient, chatToken} = props;\n\n      if (!VoiceVideoCallingSDK || !chatToken || !OCClient) {\n        return;\n      }\n\n      if (isInitialized) {\n        return;\n      }\n\n      try {\n        await VoiceVideoCallingSDK.initialize({\n          chatToken,\n          selfVideoHTMLElementId: 'selfVideo',\n          remoteVideoHTMLElementId: 'remoteVideo',\n          environment: 'test',\n          OCClient: OCClient\n        });\n\n        setIsInitialized(true);\n        console.log(\"[WebChat][Calling] VoiceVideoCallingProxy initialized!\");\n        console.log(VoiceVideoCallingSDK);\n      } catch (e) {\n        console.error(\"[WebChat][Calling] Failed to initialize VoiceVideoCalling!\");\n        console.error(e);\n      }\n\n      VoiceVideoCallingSDK.onCallAdded(() => {\n        console.log('[WebChat][Calling][CallAdded]');\n        setIncomingCall(true);\n        adjustWebChatHeightIncomingCall();\n      });\n\n      VoiceVideoCallingSDK.onCallDisconnected(() => {\n        console.log('[WebChat][Calling][CallDisconnected]');\n        adjustWebChatHeightNoCall();\n\n        setIncomingCall(false);\n        setInVideoCall(false);\n        setInVoiceCall(false);\n      });\n\n      VoiceVideoCallingSDK.onLocalVideoStreamAdded(() => {\n        console.log('[WebChat][Calling][LocalVideoStreamAdded]');\n\n        const isMicrophoneMuted = VoiceVideoCallingSDK.isMicrophoneMuted();\n        setIsMicrophoneMuted(isMicrophoneMuted);\n\n        const isRemoteVideoEnabled = VoiceVideoCallingSDK.isRemoteVideoEnabled();\n        setIsRemoteVideoEnabled(isRemoteVideoEnabled);\n\n        const isLocalVideoEnabled = VoiceVideoCallingSDK.isLocalVideoEnabled();\n        setIsLocalVideoEnabled(isLocalVideoEnabled);\n\n        // No video stream available at this point, voice call\n        if (!isLocalVideoEnabled && !isRemoteVideoEnabled) {\n          setIncomingCall(false);\n          setInVideoCall(false);\n          setInVoiceCall(true);\n        } else {\n          setIncomingCall(false);\n          setInVideoCall(true);\n          setInVoiceCall(false);\n        }\n      });\n\n      VoiceVideoCallingSDK.onLocalVideoStreamRemoved(() => {\n        console.log('[WebChat][Calling][LocalVideoStreamRemoved]');\n\n        const isMicrophoneMuted = VoiceVideoCallingSDK.isMicrophoneMuted();\n        setIsMicrophoneMuted(isMicrophoneMuted);\n\n        const isRemoteVideoEnabled = VoiceVideoCallingSDK.isRemoteVideoEnabled();\n        setIsRemoteVideoEnabled(isRemoteVideoEnabled);\n\n        const isLocalVideoEnabled = VoiceVideoCallingSDK.isLocalVideoEnabled();\n        setIsLocalVideoEnabled(isLocalVideoEnabled);\n\n        // No video stream available at this point, voice call\n        if (!isLocalVideoEnabled && !isRemoteVideoEnabled) {\n          setIncomingCall(false);\n          setInVideoCall(false);\n          setInVoiceCall(true);\n        } else {\n          setIncomingCall(false);\n          setInVideoCall(true);\n          setInVoiceCall(false);\n        }\n      });\n\n      VoiceVideoCallingSDK.onRemoteVideoStreamAdded(() => {\n        console.log('[WebChat][Calling][RemoteVideoStreamAdded]');\n\n        const isMicrophoneMuted = VoiceVideoCallingSDK.isMicrophoneMuted();\n        setIsMicrophoneMuted(isMicrophoneMuted);\n\n        const isRemoteVideoEnabled = VoiceVideoCallingSDK.isRemoteVideoEnabled();\n        setIsRemoteVideoEnabled(isRemoteVideoEnabled);\n\n        const isLocalVideoEnabled = VoiceVideoCallingSDK.isLocalVideoEnabled();\n        setIsLocalVideoEnabled(isLocalVideoEnabled);\n\n        // No video stream available at this point, voice call\n        if (!isLocalVideoEnabled && !isRemoteVideoEnabled) {\n          setIncomingCall(false);\n          setInVideoCall(false);\n          setInVoiceCall(true);\n        } else {\n          setIncomingCall(false);\n          setInVideoCall(true);\n          setInVoiceCall(false);\n        }\n      });\n\n      VoiceVideoCallingSDK.onRemoteVideoStreamRemoved(() => {\n        console.log('[WebChat][Calling][RemoteVideoStreamRemoved]');\n\n        const isMicrophoneMuted = VoiceVideoCallingSDK.isMicrophoneMuted();\n        setIsMicrophoneMuted(isMicrophoneMuted);\n\n        const isRemoteVideoEnabled = VoiceVideoCallingSDK.isRemoteVideoEnabled();\n        setIsRemoteVideoEnabled(isRemoteVideoEnabled);\n\n        const isLocalVideoEnabled = VoiceVideoCallingSDK.isLocalVideoEnabled();\n        setIsLocalVideoEnabled(isLocalVideoEnabled);\n\n        // No video stream available at this point, voice call\n        if (!isLocalVideoEnabled && !isRemoteVideoEnabled) {\n          setIncomingCall(false);\n          setInVideoCall(false);\n          setInVoiceCall(true);\n        } else {\n          setIncomingCall(false);\n          setInVideoCall(true);\n          setInVoiceCall(false);\n        }\n      });\n    }\n\n    init();\n  }, [props, isInitialized]);\n\n  const acceptVoiceCall = useCallback(async () => {\n    console.log(`[WebChat][Calling][Accept][Voice]`);\n    const {VoiceVideoCallingSDK} = props;\n\n    await VoiceVideoCallingSDK.acceptCall({\n      withVideo: false\n    });\n\n    setIncomingCall(false);\n    setInVideoCall(false);\n    setInVoiceCall(true);\n\n    adjustWebChatHeightInVoiceCall();\n\n    const isMicrophoneMuted = VoiceVideoCallingSDK.isMicrophoneMuted();\n    setIsMicrophoneMuted(isMicrophoneMuted);\n\n    const isRemoteVideoEnabled = VoiceVideoCallingSDK.isRemoteVideoEnabled();\n    setIsRemoteVideoEnabled(isRemoteVideoEnabled);\n\n    const isLocalVideoEnabled = VoiceVideoCallingSDK.isLocalVideoEnabled();\n    setIsLocalVideoEnabled(isLocalVideoEnabled);\n  }, [props]);\n\n  const acceptVideoCall = useCallback(async () => {\n    console.log(`[WebChat][Calling][Accept][Video]`);\n    const {VoiceVideoCallingSDK} = props;\n\n    await VoiceVideoCallingSDK.acceptCall({\n      withVideo: true\n    });\n\n    setIncomingCall(false);\n    setInVideoCall(true);\n    setInVoiceCall(false);\n\n    adjustWebChatHeightInVideoCall();\n\n    const isMicrophoneMuted = VoiceVideoCallingSDK.isMicrophoneMuted();\n    setIsMicrophoneMuted(isMicrophoneMuted);\n\n    const isRemoteVideoEnabled = VoiceVideoCallingSDK.isRemoteVideoEnabled();\n    setIsRemoteVideoEnabled(isRemoteVideoEnabled);\n\n    const isLocalVideoEnabled = VoiceVideoCallingSDK.isLocalVideoEnabled();\n    setIsLocalVideoEnabled(isLocalVideoEnabled);\n  }, [props]);\n\n  const rejectCall = useCallback(async () => {\n    console.log(`[WebChat][Calling][Reject]`);\n    const {VoiceVideoCallingSDK} = props;\n    await VoiceVideoCallingSDK.rejectCall();\n\n    setIncomingCall(false);\n    setInVideoCall(false);\n    setInVoiceCall(false);\n  }, [props]);\n\n  const toggleVideoButton = useCallback(async () => {\n    console.log(`[WebChat][Calling][toggleLocalVideo]`);\n    const {VoiceVideoCallingSDK} = props;\n    await VoiceVideoCallingSDK.toggleLocalVideo();\n\n    const isMicrophoneMuted = VoiceVideoCallingSDK.isMicrophoneMuted();\n    setIsMicrophoneMuted(isMicrophoneMuted);\n\n    const isRemoteVideoEnabled = VoiceVideoCallingSDK.isRemoteVideoEnabled();\n    setIsRemoteVideoEnabled(isRemoteVideoEnabled);\n\n    const isLocalVideoEnabled = VoiceVideoCallingSDK.isLocalVideoEnabled();\n    setIsLocalVideoEnabled(isLocalVideoEnabled);\n\n    // No video stream available at this point, voice call\n    if (!isLocalVideoEnabled && !isRemoteVideoEnabled) {\n      setIncomingCall(false);\n      setInVideoCall(false);\n      setInVoiceCall(true);\n    } else {\n      setIncomingCall(false);\n      setInVideoCall(true);\n      setInVoiceCall(false);\n    }\n  }, [props]);\n\n  const toggleMuteButton = useCallback(async () => {\n    console.log(`[WebChat][Calling][toggleMute]`);\n    const {VoiceVideoCallingSDK} = props;\n    await VoiceVideoCallingSDK.toggleMute();\n\n    const isMicrophoneMuted = VoiceVideoCallingSDK.isMicrophoneMuted();\n    setIsMicrophoneMuted(isMicrophoneMuted);\n\n    const isRemoteVideoEnabled = VoiceVideoCallingSDK.isRemoteVideoEnabled();\n    setIsRemoteVideoEnabled(isRemoteVideoEnabled);\n\n    const isLocalVideoEnabled = VoiceVideoCallingSDK.isLocalVideoEnabled();\n    setIsLocalVideoEnabled(isLocalVideoEnabled);\n\n    // No video stream available at this point, voice call\n    if (!isLocalVideoEnabled && !isRemoteVideoEnabled) {\n      setIncomingCall(false);\n      setInVideoCall(false);\n      setInVoiceCall(true);\n    } else {\n      setIncomingCall(false);\n      setInVideoCall(true);\n      setInVoiceCall(false);\n    }\n  }, [props]);\n\n  const stopCallButton = useCallback(async () => {\n    console.log(`[WebChat][Calling][stopCall]`);\n    const {VoiceVideoCallingSDK} = props;\n    await VoiceVideoCallingSDK.stopCall();\n  }, [props]);\n\n  const renderToggleVideoButton = () => {\n    if (!isLocalVideoEnabled) {\n      return <VideoOff className=\"toggle-video-button\" onClick={toggleVideoButton}/>\n    }\n    return <Video className=\"toggle-video-button\" onClick={toggleVideoButton}/>\n  }\n\n  const renderToggleMuteButton = () => {\n    if (isMicrophoneMuted) {\n      return <MicOff className=\"toggle-mute-button\" onClick={toggleMuteButton}/>\n    }\n    return <Mic className=\"toggle-mute-button\" onClick={toggleMuteButton}/>\n  }\n\n  return (\n    <>\n      {\n        incomingCall && <IncomingCall\n          rejectCall={rejectCall}\n          acceptVideoCall={acceptVideoCall}\n          acceptVoiceCall={acceptVoiceCall}\n        />\n      }\n      {\n        <div className={`calling ${inVideoCall || inVoiceCall? 'active': ''}`}>\n          <div className={`video-container ${inVideoCall? 'active': ''}`}>\n            <div id=\"remoteVideo\"></div>\n            <div id=\"selfVideo\"></div>\n          </div>\n          <div>\n            {\n              (inVideoCall || inVoiceCall) && <div className=\"current-call-action-bar\">\n                {renderToggleVideoButton()}\n                {renderToggleMuteButton()}\n                <PhoneOff className=\"stop-call-button\" onClick={stopCallButton}/>\n              </div>\n            }\n          </div>\n        </div>\n      }\n    </>\n  )\n}\n\nexport default Calling;","import React, { useCallback, useState } from \"react\";\nimport { Download, Mail } from \"react-feather\";\nimport './ActionBar.css';\n\ninterface ActionBarProps {\n  onDownloadClick: (event: React.MouseEvent<SVGAElement, MouseEvent>) => void\n  onEmailTranscriptClick: (event: React.MouseEvent<SVGAElement, MouseEvent>) => void\n}\n\nfunction ActionBar (props: ActionBarProps) {\n  const [isDownloadFocused, setIsDownloadFocused] = useState(false);\n  const [isEmailTranscriptFocused, setIsEmailTranscriptFocused] = useState(false);\n\n  const onMouseEnterDownload = useCallback(() => {\n    setIsDownloadFocused(true);\n  }, []);\n\n  const onMouseLeaveDownload = useCallback(() => {\n    setIsDownloadFocused(false);\n  }, []);\n\n  const onMouseEnterEmailTranscript = useCallback(() => {\n    setIsEmailTranscriptFocused(true);\n  }, []);\n\n  const onMouseLeaveEmailTranscript = useCallback(() => {\n    setIsEmailTranscriptFocused(false);\n  }, []);\n\n  return (\n    <div className=\"action-bar\">\n      <Download\n        size={'16'}\n        color={isDownloadFocused? 'rgb(22, 27, 34)': 'rgb(22, 27, 34, 0.5)'}\n        className='download-button'\n        onClick={props.onDownloadClick}\n        onMouseEnter={onMouseEnterDownload}\n        onMouseLeave={onMouseLeaveDownload}\n      />\n      <Mail\n        size={'16'}\n        color={isEmailTranscriptFocused? 'rgb(22, 27, 34)': 'rgb(22, 27, 34, 0.5)'}\n        className='email-button'\n        onClick={props.onEmailTranscriptClick}\n        onMouseEnter={onMouseEnterEmailTranscript}\n        onMouseLeave={onMouseLeaveEmailTranscript}\n      />\n    </div>\n  );\n}\n\nexport default ActionBar;","export const DIRECT_LINE_CONNECT_FULFILLED = \"DIRECT_LINE/CONNECT_FULFILLED\";\r\nexport const DIRECT_LINE_CONNECT = \"DIRECT_LINE/CONNECT\";\r\nexport const DIRECT_LINE_CONNECT_PENDING = \"DIRECT_LINE/CONNECT_PENDING\";\r\nexport const DIRECT_LINE_UPDATE_CONNECTION_STATUS = \"DIRECT_LINE/UPDATE_CONNECTION_STATUS\";\r\nexport const DIRECT_LINE_CONNECT_FULFILLING = \"DIRECT_LINE/CONNECT_FULFILLING\";\r\nexport const DIRECT_LINE_POST_ACTIVITY = \"DIRECT_LINE/POST_ACTIVITY\";\r\nexport const DIRECT_LINE_POST_ACTIVITY_PENDING = \"DIRECT_LINE/POST_ACTIVITY_PENDING\";\r\nexport const DIRECT_LINE_POST_ACTIVITY_FULFILLED = \"DIRECT_LINE/POST_ACTIVITY_FULFILLED\";\r\nexport const DIRECT_LINE_INCOMING_ACTIVITY = \"DIRECT_LINE/INCOMING_ACTIVITY\";\r\n\r\nexport const WEB_CHAT_SET_LANGUAGE = \"WEB_CHAT/SET_LANGUAGE\";\r\nexport const WEB_CHAT_SEND_MESSAGE = \"WEB_CHAT/SEND_MESSAGE\";\r\nexport const WEB_CHAT_SET_SEND_TIMEOUT = \"WEB_CHAT/SET_SEND_TIMEOUT\";\r\nexport const WEB_CHAT_SET_SEND_TYPING_INDICATOR = \"WEB_CHAT/SET_SEND_TYPING_INDICATOR\";\r\nexport const WEB_CHAT_SET_SUGGESTED_ACTIONS = \"WEB_CHAT/SET_SUGGESTED_ACTIONS\";\r\nexport const WEB_CHAT_STOP_DICTATE = \"WEB_CHAT/STOP_DICTATE\";\r\nexport const WEB_CHAT_STOP_SPEAKING = \"WEB_CHAT/STOP_SPEAKING\";\r\nexport const WEB_CHAT_SEND_EVENT = \"WEB_CHAT/SEND_EVENT\";\r\nexport const WEB_CHAT_SET_NOTIFICATION = \"WEB_CHAT/SET_NOTIFICATION\";\r\nexport const WEB_CHAT_DISMISS_NOTIFICATION = \"WEB_CHAT/DISMISS_NOTIFICATION\";\r\nexport const WEB_CHAT_SET_SEND_BOX = \"WEB_CHAT/SET_SEND_BOX\";\r\nexport const WEB_CHAT_SEND_FILES = \"WEB_CHAT/SEND_FILES\";","import {createStore} from 'botframework-webchat';\nimport {IMiddlewareCollection} from '../../interfaces/IMiddlewareCollection';\nimport {IWebChatMiddleware} from '../../interfaces/IWebChatMiddleware';\nimport { DIRECT_LINE_INCOMING_ACTIVITY } from './ActionTypes';\n\nconst ActionType = \"actionType\";\nclass CustomStore {\n    private static _instance: CustomStore;\n    private middlewares: IMiddlewareCollection;\n\n    private constructor() {\n        this.middlewares = {};\n    }\n\n    public static getInstance(): CustomStore {\n        if (!this._instance) {\n            this._instance = new CustomStore();\n        }\n        return this._instance;\n    }\n\n    // Add new middlewares\n    public subscribe(name: string, middleware: IWebChatMiddleware): void {\n        this.middlewares[name] = middleware;\n    }\n\n    public create() {\n        console.log(`[CustomStore][create]`);\n        return createStore(\n            {}, // initial state\n            ({ dispatch }: any) => (next: any) => (action: any) => {\n                // console.log(`[Store] ${action.type}`);\n\n                if (action.type === DIRECT_LINE_INCOMING_ACTIVITY) {\n                    const { activity } = action.payload;\n                    if (activity) {\n                        action.payload.activity[ActionType] = DIRECT_LINE_INCOMING_ACTIVITY;\n                    }\n                }\n\n                let nextAction = action;\n                if (action && action.payload) {\n                    for (const name of Object.keys(this.middlewares)) {\n                        const currentMiddleware = this.middlewares[name];\n                        // Apply middleware if applicable\n                        if (currentMiddleware.applicable(nextAction)) {\n                            const result = currentMiddleware.apply(nextAction);\n                            if (result.dispatchAction) {\n                                dispatch(result.dispatchAction);\n                            }\n                            if (result.nextAction) {\n                                nextAction = result.nextAction;\n                            }\n                        }\n                    }\n                }\n                return next(nextAction);\n            }\n        );\n    }\n}\n\nconst createCustomStore = () => {\n    console.log(`[createCustomStore]`);\n    const store = CustomStore.getInstance();\n    return store;\n};\n\nexport default createCustomStore;","enum DirectLineSenderRole {\r\n    User = \"user\",\r\n    Bot = \"bot\",\r\n    Channel = \"channel\"\r\n}\r\n\r\nexport default DirectLineSenderRole;","import { IResultAction } from \"../../interfaces/IResultAction\";\nimport { IWebChatAction } from \"../../interfaces/IWebChatAction\";\nimport { IWebChatMiddleware } from \"../../interfaces/IWebChatMiddleware\";\n\nexport interface IDataMaskingRule {\n    [key: string]: string;\n}\n\nexport interface IDataMaskingSetting {\n    msdyn_maskforcustomer: boolean;\n    msdyn_maskforagent: boolean;\n}\n\nexport interface IDataMaskingInfo {\n    dataMaskingRules: IDataMaskingRule;\n    setting: IDataMaskingSetting;\n}\n\nclass DataMaskingMiddleware implements IWebChatMiddleware {\n    private dataMaskingRules: any;\n\n    public constructor (dataMaskingRules: any) {\n        // console.log(`[DataMaskingMiddleware][constructor]`);\n        this.dataMaskingRules = dataMaskingRules;\n\n        console.log(`[DataMaskingRules]`);\n        console.log(this.dataMaskingRules);\n    }\n\n    public applicable(action: any): boolean {\n        // console.log(`[DataMaskingMiddleware][applicable]`);\n        const { text } = action.payload;\n        if (Object.keys(this.dataMaskingRules).length > 0 && text && action.type === \"WEB_CHAT/SEND_MESSAGE\") {\n            return true;\n        }\n        return false;\n    }\n\n    public apply(action: any): IResultAction {\n        // console.log('[DataMaskingMiddleware][apply]');\n        let _nextAction = this.applyDataMasking(action);\n        return {\n            dispatchAction: null,\n            nextAction: _nextAction\n        };\n    }\n\n    private applyDataMasking(action: any): IWebChatAction {\n        const maskingCharacter = '#';\n        let {text} = action.payload;\n        if (Object.keys(this.dataMaskingRules).length > 0) {\n            for (const maskingRule of Object.values(this.dataMaskingRules)) {\n                const regex = new RegExp(maskingRule as string, 'g');\n                let match;\n                while (match = regex.exec(text)) {\n                    const replaceStr = match[0].replace(/./g, maskingCharacter);\n                    text = text.replace(match[0], replaceStr);\n                }\n            }\n        }\n\n        action.payload.text = text;\n        return action;\n    }\n}\n\nconst createDataMaskingMiddleware = (chatConfig: any) => {\n    console.log('[createDataMaskingMiddleware]');\n    return new DataMaskingMiddleware(chatConfig);\n};\n\nexport default createDataMaskingMiddleware;\n","import DirectLineSenderRole from \"./DirectLineSenderRole\";\n\nenum ChannelDataType {\n    THREAD = \"Thread\"\n}\n\nconst handleThreadUpdate = (channelData: any) => {\n    console.log(`%c [ActivityMiddleware][handleThreadUpdate]`, 'background: #2a9fd4; color: #fff');\n    console.log(channelData);\n}\n\nconst createActivityMiddleware = () => {\n    console.log('[createActivityMiddleware]');\n\n    // Middleware to customize default activity behavior\n    const activityMiddleware = () => (next: any) => (card: any) => {\n        console.log(`%c [ActivityMiddleware]`, 'background: #2a9fd4; color: #fff');\n        console.log(card);\n\n        if (card.activity) {\n            if (card.activity.from &&\n                card.activity.from.role === DirectLineSenderRole.Channel) {\n\n                if (card.activity.channelData && card.activity.channelData.type &&\n                    card.activity.channelData.type === ChannelDataType.THREAD) {\n                    handleThreadUpdate(card.activity.channelData);\n                }\n\n                return () => false;\n            }\n\n            // System message\n            if (card.activity.channelData && card.activity.channelData.tags &&\n                card.activity.channelData.tags.includes('system')) {\n                console.log(`%c [ActivityMiddleware][Message][System] ${card.activity.text}`, 'background: #2a9fd4; color: #fff');\n                return (children: any) => (\n                    <div key={card.activity.id} className='system-message'>\n                        {next(card)(children)}\n                    </div>\n                );\n            }\n\n            if (card.activity.text === undefined || card.activity.text == null) {\n                return next(card);\n            }\n\n            // Agent message\n            if (card.activity.from.role === 'bot') {\n                console.log(`%c [ActivityMiddleware][Message][Agent] ${card.activity.text}`, 'background: #2a9fd4; color: #fff');\n            }\n\n            // Customer message\n            if (card.activity.from.role === 'user') {\n                console.log(`%c [ActivityMiddleware][Message][Customer] ${card.activity.text}`, 'background: #2a9fd4; color: #fff');\n            }\n        }\n\n        return next(card); // Default Behavior\n    }\n\n    return activityMiddleware;\n}\n\nexport default createActivityMiddleware;","enum SendStatus {\r\n    Sending = \"sending\",\r\n    SendFailed = \"send failed\",\r\n    Sent = \"sent\"\r\n}\r\n\r\nconst isSystemActivity = (card: any) => {\r\n    return card.activity.channelData && card.activity.channelData.tags &&\r\n    card.activity.channelData.tags.includes('system');\r\n}\r\n\r\nconst isAgentActivity = (card: any) => {\r\n    return card.activity.from.role === 'bot'\r\n}\r\n\r\nconst isCustomerActivity = (card: any) => {\r\n    return card.activity.from.role === 'user'\r\n}\r\n\r\nconst createActivityStatusMiddleware = () => {\r\n    const activityStatusMiddleware = () => (next: any) => (card: any) => {\r\n        console.log(`%c [activityStatusMiddleware]`, \"background: #238636; color: #fff\");\r\n        console.log(card);\r\n\r\n        let activityType = '';\r\n        if (isSystemActivity(card)) {\r\n            activityType = 'System';\r\n        } else if (isAgentActivity(card)) {\r\n            activityType = 'Agent';\r\n        } else if (isCustomerActivity(card)) {\r\n            activityType = 'Customer';\r\n        }\r\n\r\n        console.log(`%c [activityStatusMiddleware][Message][${activityType}] ${card.activity.text}`, \"background: #238636; color: #fff\");\r\n\r\n        // Custom handler on different send status\r\n        if (card.sendState === SendStatus.Sent) {\r\n            console.log(`%c [activityStatusMiddleware][Message][${activityType}][Status] Sent!`, \"background: #238636; color: #fff\");\r\n        } else if (card.sendState === SendStatus.Sending) {\r\n            console.log(`%c [activityStatusMiddleware][Message][${activityType}][Status] Sending...`, \"background: #238636; color: #fff\");\r\n        } else if (card.sendState === SendStatus.SendFailed) {\r\n            console.log(`%c [activityStatusMiddleware][Message][${activityType}][Status] Failed :(`, \"background: #238636; color: #fff\");\r\n        }\r\n    };\r\n\r\n    return activityStatusMiddleware;\r\n  };\r\n\r\n  export default createActivityStatusMiddleware;\r\n","import { AlertCircle } from \"react-feather\";\n\nconst getInitial = (text: string): string => {\n    if (text) {\n        const initials = text.split(/\\s/).reduce((response, word) => response += word.slice(0, 1), '');\n        if (initials.length > 1) {\n            return initials.substring(0, 2).toUpperCase();\n        } else {\n            return text.substring(0, 2).toUpperCase();\n        }\n    }\n    return \"\";\n}\n\nconst createAvatarMiddleware = () => {\n    console.log('[createAvatarMiddleware]');\n\n    // Middleware to display avatar\n    const avatarMiddleware = () => (next: any) => (card: any) => {\n        console.log(`[AvatarMiddleware]`);\n        const {\n            activity: {\n                channelData: {\n                    tags\n                },\n                from: {\n                    name\n                },\n                text\n            },\n            fromUser\n        } = card;\n\n        console.log(card);\n        // System message\n        if (tags && tags.includes('system')) {\n            console.log(`[AvatarMiddleware][Message][System] ${text}`);\n\n            // Display alert icon\n            return (\n                <div>\n                    <AlertCircle color='red' size={20}/>\n                </div>\n            )\n        }\n\n        if (fromUser === undefined || fromUser === null) {\n            return false; // Do not display avatar on unknown message\n        }\n\n        // Display avatar on agent/customer messages\n\n        // Agent message\n        if (!fromUser) {\n            console.log(`[AvatarMiddleware][Message][Agent] ${text}`);\n            return (\n                <div className='webchat__avatar'>\n                    <p className='webchat__avatar_initials'> {getInitial(name)} </p>\n                </div>\n            )\n        }\n\n        // Customer message\n        if (fromUser) {\n            console.log(`[AvatarMiddleware][Message][Customer] ${text}`);\n            return (\n                <div className='webchat__avatar'>\n                    <p className='webchat__avatar_initials'> {getInitial(name) || 'CU'}  </p>\n                </div>\n            )\n        }\n\n        return next(card); // Default Behavior\n    }\n\n    return avatarMiddleware;\n}\n\nexport default createAvatarMiddleware;","import AttachmentContent from \"../Attachment/AttachmentContent\";\r\nimport AttachmentIcon from \"../Attachment/AttachmentIcon\";\r\nimport { DIRECT_LINE_INCOMING_ACTIVITY } from \"./ActionTypes\";\r\n\r\nconst imageRegex = /(\\.)(jpeg|jpg|jiff|png|gif|bmp)$/i;\r\nconst audioMediaRegex = /(\\.)(aac|aiff|alac|flac|mp2|mp3|pcm|wav|wma)$/i;\r\nconst videoMediaRegex = /(\\.)(avchd|avi|flv|mpe|mpeg|mpg|mpv|mp4|m4p|m4v|mov|qt|swf|webm|wmv)$/i;\r\n\r\nenum MimeTypes {\r\n    UnknownFileType = \"application/octet-stream\"\r\n}\r\n\r\nconst supportedAdaptiveCardContentTypes = [\r\n    \"application/vnd.microsoft.card.adaptive\",\r\n    \"application/vnd.microsoft.card.audio\",\r\n    \"application/vnd.microsoft.card.hero\",\r\n    \"application/vnd.microsoft.card.receipt\",\r\n    \"application/vnd.microsoft.card.thumbnail\",\r\n    \"application/vnd.microsoft.card.signin\",\r\n    \"application/vnd.microsoft.card.oauth\",\r\n];\r\n\r\n/**\r\n * Patch card with different attachment data.\r\n * @param card\r\n * @param newAttachment\r\n */\r\nfunction patchAttachment(card: any, newAttachment: any) {\r\n    const { activity, attachment } = card;\r\n\r\n    const patchedAttachment = Object.assign({}, attachment);\r\n    patchedAttachment.contentType = newAttachment.contentType;\r\n    patchedAttachment.thumbnailUrl = newAttachment.thumbnailUrl;\r\n\r\n    const patchedAttachments = activity.attachments.map((target: any) =>\r\n        target === attachment ? patchedAttachment : target\r\n    );\r\n\r\n    const patchedActivity = Object.assign({}, activity);\r\n    patchedActivity.attachments = patchedAttachments;\r\n\r\n    return {\r\n        activity: patchedActivity,\r\n        attachment: patchedAttachment\r\n    };\r\n}\r\n\r\nconst createAttachmentMiddleware = () => {\r\n    console.log('[createAttachmentMiddleware]');\r\n\r\n    const attachmentMiddleware = () => (next: any) => (card: any) => {\r\n        console.log(`%c [AttachmentMiddleware]`, 'background: #ff69b4; color: #fff');\r\n        console.log(card);\r\n\r\n        const { activity: { attachments }, attachment } = card;\r\n\r\n        // No attachment\r\n        if (!attachments || !attachments.length || !attachment) {\r\n            return next(card);\r\n        }\r\n\r\n        // Adaptive Cards\r\n        let { content, contentType } = attachment || { content: \"\", contentType: \"\" };\r\n        let { type } = content || { type: \"\" };\r\n\r\n        // LiveChatVersion 2\r\n        if (!type && content && supportedAdaptiveCardContentTypes.includes(contentType)) {\r\n            try {\r\n                content = JSON.parse(content);\r\n                type = content.type;\r\n                card.attachment.content = content;\r\n            } catch (e) {\r\n\r\n            }\r\n        }\r\n\r\n        if (type === 'AdaptiveCard' || supportedAdaptiveCardContentTypes.includes(contentType)) {\r\n            return next(card);\r\n        }\r\n\r\n        if (card.activity.channelData && card.activity.channelData.middlewareData) {\r\n            attachment.contentUrl = card.activity.channelData.middlewareData[attachment.name];\r\n        } else if (attachment.tempContentUrl) {\r\n            attachment.contentUrl = attachment.tempContentUrl;\r\n        }\r\n\r\n        const imageExtension = imageRegex.test(attachment.name);\r\n        const audioExtension = audioMediaRegex.test(attachment.name);\r\n        const videoExtension = videoMediaRegex.test(attachment.name);\r\n\r\n        // Renders custom component on images\r\n        if (imageExtension) {\r\n            const patchedCard = patchAttachment(card, { contentType: MimeTypes.UnknownFileType, thumbnailUrl: undefined });\r\n            return (\r\n                <div>\r\n                    {card && next(card)}\r\n                    <AttachmentContent>\r\n                        <AttachmentIcon name={attachment.name}/>\r\n                        {patchedCard && next(patchedCard)}\r\n                    </AttachmentContent>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        // Renders custom component on audio/video files\r\n        if (audioExtension || videoExtension) {\r\n            if (card.activity.actionType && card.activity.actionType === DIRECT_LINE_INCOMING_ACTIVITY) {\r\n                const patchedCard = patchAttachment(card, { contentType: MimeTypes.UnknownFileType, thumbnailUrl: undefined });\r\n                return (\r\n                    <div>\r\n                        {card && next(card)}\r\n                        <AttachmentContent>\r\n                            <AttachmentIcon name={attachment.name}/>\r\n                            {patchedCard && next(patchedCard)}\r\n                        </AttachmentContent>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n\r\n        return (\r\n            <AttachmentContent>\r\n                <AttachmentIcon name={attachment.name}/>\r\n                {next(card)}\r\n            </AttachmentContent>\r\n        )\r\n    }\r\n\r\n    return attachmentMiddleware;\r\n}\r\n\r\nexport default createAttachmentMiddleware;","import React from \"react\";\r\n\r\nconst AttachmentContent = (props: React.PropsWithChildren<any>) => {\r\n    const style = {\r\n        fontSize: '14px',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    }\r\n\r\n    return (\r\n        <div style={style}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AttachmentContent;","const getIcon = (extension: string, iconSize = 14) => {\r\n    const ArchiveIcon = (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 2048 2048\"\r\n            width={iconSize}\r\n            height={iconSize}>\r\n            <path d=\"M1792 0q27 0 50 10t40 27 28 41 10 50v480q0 45-9 77t-24 58-31 46-31 40-23 44-10 55v992q0 27-10 50t-27 40-41 28-50 10H256V0h1536zM640 128v384h256V128H640zm1024 800q0-31-9-54t-24-44-31-41-31-45-23-58-10-78V128h-512v512H768v128H640V640H512V128H384v1792h384v-128h128v128h768V928zm128-800h-128v480q0 24 4 42t13 33 20 29 27 32q15-17 26-31t20-30 13-33 5-42V128zM640 896h128v128H640V896zm0 256h128v128H640v-128zm0 256h128v128H640v-128zm128 256v128H640v-128h128zm0-768V768h128v128H768zm0 256v-128h128v128H768zm0 256v-128h128v128H768zm0 256v-128h128v128H768z\" />\r\n        </svg>\r\n    );\r\n\r\n    const AudioIcon = (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 2048 2048\"\r\n            width={iconSize}\r\n            height={iconSize}>\r\n            <path d=\"M1792 1408q0 62-29 109t-76 80-104 50-111 17q-54 0-111-17t-103-49-76-80-30-110q0-61 29-109t76-80 104-50 111-17q51 0 100 12t92 39V226L768 450v1214q0 62-29 109t-76 80-104 50-111 17q-54 0-111-17t-103-49-76-80-30-110q0-61 29-109t76-80 104-50 111-17q51 0 100 12t92 39V350L1792 62v1346z\" />\r\n        </svg>\r\n    );\r\n\r\n    const BlankIcon = (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 2048 2048\"\r\n            width={iconSize}\r\n            height={iconSize}>\r\n            <path d=\"M549 0h1243v1755l-293 293H256V293L549 0zm1115 1701V128H603L384 347v1573h1061l219-219z\" />\r\n        </svg>\r\n    );\r\n\r\n    const ExcelIcon = (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 2048 2048\"\r\n            width={iconSize}\r\n            height={iconSize}>\r\n            <path d=\"M2048 475v1445q0 27-10 50t-27 40-41 28-50 10H640q-27 0-50-10t-40-27-28-41-10-50v-256H115q-24 0-44-9t-37-25-25-36-9-45V627q0-24 9-44t25-37 36-25 45-9h397V128q0-27 10-50t27-40 41-28 50-10h933q26 0 49 9t42 28l347 347q18 18 27 41t10 50zm-384-256v165h165l-165-165zM261 1424h189q2-4 12-23t25-45 29-55 29-53 23-41 10-17q27 59 60 118t65 116h187l-209-339 205-333H707q-31 57-60 114t-63 112q-29-57-57-113t-57-113H279l199 335-217 337zm379 496h1280V512h-256q-27 0-50-10t-40-27-28-41-10-50V128H640v384h397q24 0 44 9t37 25 25 36 9 45v922q0 24-9 44t-25 37-36 25-45 9H640v256zm640-1024V768h512v128h-512zm0 256v-128h512v128h-512zm0 256v-128h512v128h-512z\" />\r\n        </svg>\r\n    );\r\n\r\n    const ImageIcon = (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 2048 2048\"\r\n            width={iconSize}\r\n            height={iconSize}>\r\n            <path d=\"M256 1920h1536v128H128V0h1115l549 549v91h-640V128H256v1792zM1280 512h293l-293-293v293zm768 256v1024H640V768h1408zM768 896v421l320-319 416 416 160-160 256 256V896H768zm987 768h139l-230-230-69 70 160 160zm-987 0h805l-485-486-320 321v165zm960-512q-26 0-45-19t-19-45q0-26 19-45t45-19q26 0 45 19t19 45q0 26-19 45t-45 19z\" />\r\n        </svg>\r\n    );\r\n\r\n    const OneNoteIcon = (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 2048 2048\"\r\n            width={iconSize}\r\n            height={iconSize}>\r\n            <path d=\"M1963 128q35 0 60 25t25 60v1622q0 35-25 60t-60 25H597q-35 0-60-25t-25-60v-299H85q-35 0-60-25t-25-60V597q0-35 25-60t60-25h427V213q0-35 25-60t60-25h1366zM389 939l242 420h152V689H635v429L402 689H241v670h148V939zm1531 853v-256h-256v256h256zm0-384v-256h-256v256h256zm0-384V768h-256v256h256zm0-384V256H640v256h299q35 0 60 25t25 60v854q0 35-25 60t-60 25H640v256h896V640h384z\" />\r\n        </svg>\r\n    );\r\n\r\n    const PDFIcon = (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 2048 2048\"\r\n            width={iconSize}\r\n            height={iconSize}>\r\n            <path d=\"M1920 1664h-128v384H128v-384H0V640h128V0h1243l421 421v219h128v1024zM1408 384h165l-165-165v165zM256 640h1408V512h-384V128H256v512zm1408 1024H256v256h1408v-256zm128-896H128v768h1664V768zM448 896q40 0 75 15t61 41 41 61 15 75q0 40-15 75t-41 61-61 41-75 15h-64v128H256V896h192zm0 256q26 0 45-19t19-45q0-26-19-45t-45-19h-64v128h64zm448-256q53 0 99 20t82 55 55 81 20 100q0 53-20 99t-55 82-81 55-100 20H768V896h128zm0 384q27 0 50-10t40-27 28-41 10-50q0-27-10-50t-27-40-41-28-50-10v256zm384-384h320v128h-192v128h192v128h-192v128h-128V896z\" />\r\n        </svg>\r\n    );\r\n\r\n    const PowerpointIcon = (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 2048 2048\"\r\n            width={iconSize}\r\n            height={iconSize}>\r\n            <path d=\"M2048 475v1445q0 27-10 50t-27 40-41 28-50 10H640q-27 0-50-10t-40-27-28-41-10-50v-256H115q-24 0-44-9t-37-25-25-36-9-45V627q0-24 9-44t25-37 36-25 45-9h397V128q0-27 10-50t27-40 41-28 50-10h933q26 0 49 9t42 28l347 347q18 18 27 41t10 50zm-384-256v165h165l-165-165zM368 752v672h150v-226h100q52 0 97-15t78-46 53-72 20-97q0-56-17-97t-50-67-76-39-97-13H368zm1552 1168V512h-256q-27 0-50-10t-40-27-28-41-10-50V128H640v384h397q24 0 44 9t37 25 25 36 9 45v922q0 24-9 44t-25 37-36 25-45 9H640v256h1280zM1536 640q79 0 149 30t122 82 83 123 30 149h-384V640zm-128 128v384h384q0 80-30 149t-82 122-123 83-149 30q-33 0-65-6t-63-18V792q31-11 63-17t65-7zm-804 300h-86V883h90q47 0 74 20t27 70q0 52-28 73t-77 22z\" />\r\n        </svg>\r\n    );\r\n\r\n    const VideoIcon = (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 2048 2048\"\r\n            width={iconSize}\r\n            height={iconSize}>\r\n            <path d=\"M0 256h2048v1408H0V256zm256 1280v-128H128v128h128zm0-256v-128H128v128h128zm0-256V896H128v128h128zm0-256V640H128v128h128zm0-256V384H128v128h128zm1408 786V384H384v823l411-549 741 878-329-558 137-137 320 457zm256 238v-128h-128v128h128zm0-256v-128h-128v128h128zm0-256V896h-128v128h128zm0-256V640h-128v128h128zm0-256V384h-128v128h128z\" />\r\n        </svg>\r\n    );\r\n\r\n    const VisioIcon = (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 2048 2048\"\r\n            width={iconSize}\r\n            height={iconSize}>\r\n            <path d=\"M2048 475v1445q0 27-10 50t-27 40-41 28-50 10H640q-27 0-50-10t-40-27-28-41-10-50v-256H115q-24 0-44-9t-37-25-25-36-9-45V627q0-24 9-44t25-37 36-25 45-9h397V128q0-27 10-50t27-40 41-28 50-10h933q26 0 49 9t42 28l347 347q18 18 27 41t10 50zm-384-256v165h165l-165-165zM493 1424h163l255-672H745l-147 427q-5 16-10 31t-11 31q-41-123-82-244t-84-245H241l248 662 4 10zm147 496h1280V512h-256q-27 0-50-10t-40-27-28-41-10-50V128H640v384h397q24 0 44 9t37 25 25 36 9 45v922q0 24-9 44t-25 37-36 25-45 9H640v256zm960-1280l192 192-128 128v448h-256v128h-128v-384h128v128h128V960l-128-128 192-192z\" />\r\n        </svg>\r\n    );\r\n\r\n    const WordIcon = (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 2048 2048\"\r\n            width={iconSize}\r\n            height={iconSize}>\r\n            <path d=\"M2048 475v1445q0 27-10 50t-27 40-41 28-50 10H640q-27 0-50-10t-40-27-28-41-10-50v-256H115q-24 0-44-9t-37-25-25-36-9-45V627q0-24 9-44t25-37 36-25 45-9h397V128q0-27 10-50t27-40 41-28 50-10h933q26 0 49 9t42 28l347 347q18 18 27 41t10 50zm-384-256v165h165l-165-165zM320 1424h161q2-8 9-43t18-83 21-103 22-101 16-76 8-31l7 30q7 30 17 77t23 100 23 103 19 84 10 43h160l148-672H834l-80 438-100-438H502l-96 440-86-440H170l150 672zm320 496h1280V512h-256q-27 0-50-10t-40-27-28-41-10-50V128H640v384h397q24 0 44 9t37 25 25 36 9 45v922q0 24-9 44t-25 37-36 25-45 9H640v256zm640-1024V768h512v128h-512zm0 256v-128h512v128h-512zm0 256v-128h512v128h-512z\" />\r\n        </svg>\r\n    );\r\n\r\n    const FileAttachmentIconMap: {[key: string]: any} = {\r\n        \"aac\": AudioIcon,\r\n        \"aiff\": AudioIcon,\r\n        \"alac\": AudioIcon,\r\n        \"avchd\": VideoIcon,\r\n        \"avi\": VideoIcon,\r\n        \"bmp\": ImageIcon,\r\n        \"doc\": WordIcon,\r\n        \"docx\": WordIcon,\r\n        \"flac\": AudioIcon,\r\n        \"flv\": VideoIcon,\r\n        \"gif\": ImageIcon,\r\n        \"jiff\": ImageIcon,\r\n        \"jpeg\": ImageIcon,\r\n        \"jpg\": ImageIcon,\r\n        \"mpe\": VideoIcon,\r\n        \"mpeg\": VideoIcon,\r\n        \"mpg\": VideoIcon,\r\n        \"mpv\": VideoIcon,\r\n        \"mp2\": AudioIcon,\r\n        \"mp3\": AudioIcon,\r\n        \"mp4\": VideoIcon,\r\n        \"m4p\": VideoIcon,\r\n        \"m4v\": VideoIcon,\r\n        \"mov\": VideoIcon,\r\n        \"one\": OneNoteIcon,\r\n        \"pcm\": AudioIcon,\r\n        \"pdf\": PDFIcon,\r\n        \"png\": ImageIcon,\r\n        \"ppt\": PowerpointIcon,\r\n        \"pptx\": PowerpointIcon,\r\n        \"qt\": VideoIcon,\r\n        \"rar\": ArchiveIcon,\r\n        \"swf\": VideoIcon,\r\n        \"tar\": ArchiveIcon,\r\n        \"tar.gz\": ArchiveIcon,\r\n        \"tgz\": ArchiveIcon,\r\n        \"txt\": BlankIcon,\r\n        \"vsd\": VisioIcon,\r\n        \"vsdx\": VisioIcon,\r\n        \"wav\": AudioIcon,\r\n        \"webm\": VideoIcon,\r\n        \"wma\": AudioIcon,\r\n        \"wmv\": VideoIcon,\r\n        \"xls\": ExcelIcon,\r\n        \"xlsx\": ExcelIcon,\r\n        \"zip\": ArchiveIcon,\r\n        \"zipx\": ArchiveIcon,\r\n        \"7z\": ArchiveIcon,\r\n    };\r\n\r\n    const key = extension.startsWith(\".\") ? extension.slice(1) : extension || \"\";\r\n    const icon = FileAttachmentIconMap[key.toLowerCase()] || BlankIcon;\r\n    return icon;\r\n}\r\n\r\ninterface AttachmentIconProps {\r\n    name: string;\r\n}\r\n\r\nconst AttachmentIcon = (props: AttachmentIconProps) => {\r\n    const fileExtension = props.name.substring(props.name.lastIndexOf('.') + 1, props.name.length) || props.name;\r\n    const style = {\r\n        padding: '0 0 0 8px'\r\n    }\r\n\r\n    return (\r\n        <div style={style}>\r\n            {getIcon(fileExtension)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AttachmentIcon;","import { IResultAction } from \"../../interfaces/IResultAction\";\r\nimport { IWebChatMiddleware } from \"../../interfaces/IWebChatMiddleware\";\r\nimport { DIRECT_LINE_POST_ACTIVITY_PENDING } from \"./ActionTypes\";\r\n\r\nenum DeliveryMode {\r\n    Bridged = 'bridged',\r\n    Unbridged = 'unbridged'\r\n}\r\n\r\nclass ChannelDataMiddleware implements IWebChatMiddleware {\r\n    public constructor (private omnichannelConfig: any) {}\r\n\r\n    public applicable(action: any): boolean {\r\n        return action.type === DIRECT_LINE_POST_ACTIVITY_PENDING\r\n        && action.payload\r\n        && action.payload.activity\r\n        && action.payload.activity.channelData;\r\n    }\r\n\r\n    public apply(action: any): IResultAction {\r\n        const channelIdTag = `ChannelId-lcw`; // Tag for PVA bot to return proper response for live chat channel\r\n        const customerMessageTag = `FromCustomer`; // Tag to support transcript analytics feature\r\n\r\n        const nextAction = action;\r\n        if (nextAction.payload.activity.channelData.tags) {\r\n            if (!nextAction.payload.activity.channelData.tags.includes(channelIdTag)) {\r\n                nextAction.payload.activity.channelData.tags.push(channelIdTag);\r\n            }\r\n\r\n            if (!nextAction.payload.activity.channelData.tags.includes(customerMessageTag)) {\r\n                nextAction.payload.activity.channelData.tags.push(customerMessageTag);\r\n            }\r\n        } else {\r\n            nextAction.payload.activity.channelData.tags = [channelIdTag];\r\n            nextAction.payload.activity.channelData.tags.push(customerMessageTag);\r\n        }\r\n\r\n        nextAction.payload.activity.channelData.metadata = {\r\n            deliveryMode: DeliveryMode.Bridged,\r\n            widgetId: this.omnichannelConfig.widgetId\r\n        };\r\n\r\n        return {\r\n            dispatchAction: null,\r\n            nextAction: nextAction\r\n        }\r\n    }\r\n}\r\n\r\nconst createChannelDataMiddleware = (omnichannelConfig: any) => {\r\n    console.log('[createChannelDataMiddleware]');\r\n    return new ChannelDataMiddleware(omnichannelConfig);\r\n};\r\n\r\nexport default createChannelDataMiddleware;\r\n","export class ConfigurationManager {\r\n    public static liveChatVersion: number = 1;\r\n    public static canUploadAttachment: boolean = false;\r\n    public static isPersistentChat: boolean = false;\r\n    public static isChatReconnect: boolean = false;\r\n}\r\n\r\nconst transformLiveChatConfig = (liveChatConfig: any): ConfigurationManager => {\r\n    const liveWSAndLiveChatEngJoin = (liveChatConfig as any)[\"LiveWSAndLiveChatEngJoin\"];\r\n\r\n    const liveChatVersion = (liveChatConfig as any)[\"LiveChatVersion\"];\r\n    const canUploadAttachment = liveWSAndLiveChatEngJoin[\"msdyn_enablefileattachmentsforcustomers\"] === \"true\" || false;\r\n    const isPersistentChat = liveWSAndLiveChatEngJoin[\"msdyn_conversationmode\"] === \"192350001\" || false;\r\n    const isChatReconnect = (liveWSAndLiveChatEngJoin[\"msdyn_conversationmode\"] === \"192350000\" && liveWSAndLiveChatEngJoin[\"msdyn_enablechatreconnect\"] === \"true\") || false\r\n\r\n    ConfigurationManager.liveChatVersion = parseInt(liveChatVersion) || 1;\r\n    ConfigurationManager.canUploadAttachment = canUploadAttachment;\r\n    ConfigurationManager.isPersistentChat = isPersistentChat;\r\n    ConfigurationManager.isChatReconnect = isChatReconnect;\r\n\r\n    return ConfigurationManager;\r\n};\r\n\r\nexport default transformLiveChatConfig;","import { ConfigurationManager } from \"../../utils/transformLiveChatConfig\";\r\n\r\nconst createTypingIndicatorMiddleware = (sendTypingEvent = () => {}) => {\r\n    console.log('[createTypingIndicatorMiddleware]');\r\n\r\n    const typingIndicatorMiddleware = () => (next: any) => (card: any) => {\r\n        console.log(`%c [typingIndicatorMiddleware]`, \"background: #2266e3; color: #fff\");\r\n        console.log(card);\r\n\r\n        const {\r\n            activeTyping,\r\n            visible\r\n        } = card;\r\n\r\n        if (!activeTyping || (ConfigurationManager.liveChatVersion === 1 && !visible)) {\r\n            return null;\r\n        }\r\n\r\n        const typers = Object.keys(activeTyping).map(key => activeTyping[key]);\r\n        const typingUser = typers.filter((typer) => typer.role === 'user');\r\n\r\n        // Send typing on user typing\r\n        if (typingUser.length && ConfigurationManager.liveChatVersion === 2 && !visible) {\r\n            sendTypingEvent();\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            typers && typers.length > 0 && (\r\n                <div className='webchat__typingIndicator'>\r\n                    <div className='bubble' style={{ background: '#2266e3' }}></div>\r\n                    <div className='bubble' style={{ background: '#2266e3' }}></div>\r\n                    <div className='bubble' style={{ background: '#2266e3' }}></div>\r\n                    <div> {`${typers[0].name || 'Agent'} is typing...`} </div>\r\n                </div>\r\n            )\r\n        );\r\n    }\r\n\r\n    return typingIndicatorMiddleware;\r\n}\r\n\r\nexport default createTypingIndicatorMiddleware;","const fetchOmnichannelConfig = () => {\n  const omnichannelConfig = { // Default config\n    orgId: process.env.REACT_APP_orgId || '',\n    orgUrl: process.env.REACT_APP_orgUrl || '',\n    widgetId: process.env.REACT_APP_widgetId || ''\n  };\n\n  const urlParams = new URLSearchParams(window.location.search);\n\n  // Overrides default config if URL any param is found\n  if (urlParams.get('orgUrl') !== null) {\n    omnichannelConfig.orgUrl = urlParams.get('orgUrl')!;\n  }\n\n  if (urlParams.get('orgId') !== null) {\n    omnichannelConfig.orgId = urlParams.get('orgId')!;\n  }\n\n  if (urlParams.get('widgetId') !== null) {\n    omnichannelConfig.widgetId = urlParams.get('widgetId')!;\n  }\n\n  return omnichannelConfig;\n}\n\nexport default fetchOmnichannelConfig;","const fetchTelemetryConfig = () => {\n    const telemetryConfig = {\n        telemetry: {\n            disable: false,\n            ariaTelemetryKey: ''\n        }\n    };\n\n    const urlParams = new URLSearchParams(window.location.search);\n    if (urlParams.get('telemetry') !== null) {\n        telemetryConfig.telemetry.disable = urlParams.get('telemetry') == 'true'? false: true;\n    }\n\n    if (urlParams.get('ariaTelemetryKey') !== null) {\n        telemetryConfig.telemetry.ariaTelemetryKey = urlParams.get('ariaTelemetryKey') || '';\n    }\n\n    return telemetryConfig;\n}\n\nexport default fetchTelemetryConfig;","const fetchCallingConfig = () => {\n    const callingConfig = {\n        disable: true\n    }\n\n    const urlParams = new URLSearchParams(window.location.search);\n    if (urlParams.get('calling') !== null) {\n        callingConfig.disable = urlParams.get('calling') == 'false'? true: false;\n    }\n\n    return callingConfig;\n}\n\nexport default fetchCallingConfig;","const fetchDebugConfig = () => {\n    const debugConfig = {\n        disable: true\n    }\n\n    const urlParams = new URLSearchParams(window.location.search);\n    if (urlParams.get('debug') !== null) {\n        debugConfig.disable = urlParams.get('debug') == 'true'? false: true;\n    }\n\n    return debugConfig;\n}\n\nexport default fetchDebugConfig;","const fetchChatReconnectConfig = () => {\r\n    const chatReconnectConfig: any = {\r\n        reconnectId: null\r\n    }\r\n\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    if (urlParams.get('oc.reconnectid') !== null) {\r\n        chatReconnectConfig.reconnectId = urlParams.get('oc.reconnectid') || null;\r\n    }\r\n\r\n    return chatReconnectConfig;\r\n}\r\n\r\nexport default fetchChatReconnectConfig;","import * as AdaptiveCards from 'adaptivecards';\nimport AdaptiveCardFieldsValidator from './AdaptiveCardFieldsValidator';\nimport { CardElement, SerializationContext } from 'adaptivecards';\nimport React, { useCallback, useEffect, useState, useContext, useMemo } from 'react';\nimport ReactWebChat from 'botframework-webchat';\nimport { IRawMessage, OmnichannelChatSDK } from '@microsoft/omnichannel-chat-sdk';\nimport { ActionType, Store } from '../../context';\nimport Loading from '../Loading/Loading';\nimport ChatButton from '../ChatButton/ChatButton';\nimport ChatHeader from '../ChatHeader/ChatHeader';\nimport Calling from '../Calling/Calling';\nimport ActionBar from '../ActionBar/ActionBar';\nimport createCustomStore from './createCustomStore';\nimport createDataMaskingMiddleware from './createDataMaskingMiddleware';\nimport createActivityMiddleware from './createActivityMiddleware';\nimport createAvatarMiddleware from './createAvatarMiddleware';\nimport createActivityStatusMiddleware from './createActivityStatusMiddleware';\nimport createAttachmentMiddleware from './createAttachmentMiddleware';\nimport createChannelDataMiddleware from './createChannelDataMiddleware';\nimport createTypingIndicatorMiddleware from './createTypingIndicatorMiddleware';\nimport fetchOmnichannelConfig from '../../utils/fetchOmnichannelConfig';\nimport fetchTelemetryConfig from '../../utils/fetchTelemetryConfig';\nimport fetchCallingConfig from '../../utils/fetchCallingConfig';\nimport fetchDebugConfig from '../../utils/fetchDebugConfig';\nimport fetchChatReconnectConfig from '../../utils/fetchChatReconnectConfig';\nimport transformLiveChatConfig, { ConfigurationManager } from '../../utils/transformLiveChatConfig';\nimport './WebChat.css';\n\nconst omnichannelConfig: any = fetchOmnichannelConfig();\nconst telemetryConfig: any = fetchTelemetryConfig();\nconst callingConfig: any = fetchCallingConfig();\nconst debugConfig: any = fetchDebugConfig();\nconst chatReconnectConfig: any = fetchChatReconnectConfig();\n\nconsole.log(`%c [OmnichannelConfig]`, 'background-color:#001433;color:#fff');\nconsole.log(omnichannelConfig);\n\nconsole.log(`%c [telemetryConfig]`, 'background-color:#001433;color:#fff');\nconsole.log(telemetryConfig);\n\nconsole.log(`%c [callingConfig]`, 'background-color:#001433;color:#fff');\nconsole.log(callingConfig);\n\nconsole.log(`%c [debugConfig]`, 'background-color:#001433;color:#fff');\nconsole.log(debugConfig);\n\nconst avatarMiddleware: any = createAvatarMiddleware();\nconst activityMiddleware: any = createActivityMiddleware();\nconst activityStatusMiddleware: any = createActivityStatusMiddleware();\nconst channelDataMiddleware: any = createChannelDataMiddleware(omnichannelConfig);\nconst attachmentMiddleware: any = createAttachmentMiddleware();\n\nconst defaultStyleOptions = {\n  bubbleBorderRadius: 10,\n  bubbleNubSize: 10,\n  bubbleNubOffset: 15,\n\n  bubbleFromUserBorderRadius: 10,\n  bubbleFromUserNubSize: 10,\n  bubbleFromUserNubOffset: 15,\n  bubbleFromUserBackground: 'rgb(246, 246, 246)'\n}\n\nconst patchAdaptiveCard = (adaptiveCard: any) => {\n  return JSON.parse(adaptiveCard.replaceAll(\"&#42;\", \"*\"));  // HTML entities '&#42;' is not unescaped for some reason\n}\n\nfunction WebChat() {\n  const {state, dispatch} = useContext(Store);\n  const [chatSDK, setChatSDK] = useState<OmnichannelChatSDK>();\n  const [liveChatContext, setLiveChatContext] = useState<any>(undefined);\n  const [preChatSurvey, setPreChatSurvey] = useState(undefined);\n  const [preChatResponse, setPreChatResponse] = useState(undefined);\n  const [chatAdapter, setChatAdapter] = useState<any>(undefined);\n  const [webChatStore, setWebChatStore] = useState(undefined);\n  const [chatToken, setChatToken] = useState(undefined);\n  const [VoiceVideoCallingSDK, setVoiceVideoCallingSDK] = useState(undefined);\n  const [typingIndicatorMiddleware, setTypingIndicatorMiddleware] = useState(undefined);\n  const [shouldHideSendBox, setShouldHideSendBox] = useState(false);\n\n  useEffect(() => {\n    const init = async () => {\n      const chatSDKConfig = {\n        ...telemetryConfig,\n        chatReconnect: {\n          disable: false\n        }\n      };\n\n      const chatSDK = new OmnichannelChatSDK(omnichannelConfig, chatSDKConfig);\n\n      chatSDK.setDebug(!debugConfig.disable);\n\n      await chatSDK.initialize();\n      setChatSDK(chatSDK);\n\n      const liveChatConfig = await chatSDK.getLiveChatConfig();\n      transformLiveChatConfig(liveChatConfig);\n\n      const liveChatContext = localStorage.getItem('liveChatContext');\n      if (liveChatContext && Object.keys(JSON.parse(liveChatContext)).length > 0) {\n        console.log(\"[liveChatContext]\");\n        console.log(liveChatContext);\n        setLiveChatContext(liveChatContext);\n      }\n\n      if ((chatSDK as any).getVoiceVideoCalling && !callingConfig.disable) {\n        try {\n          const VoiceVideoCalling = await (chatSDK as any).getVoiceVideoCalling();\n          VoiceVideoCalling.setDebug(true);\n          setVoiceVideoCallingSDK(VoiceVideoCalling);\n          console.log(\"VoiceVideoCalling loaded\");\n        } catch (e) {\n          console.log(`Failed to load VoiceVideoCalling: ${e}`);\n        }\n      }\n\n      let preChatSurvey = await chatSDK.getPreChatSurvey(false);\n      if (preChatSurvey) {\n        console.info('[PreChatSurvey]');\n        preChatSurvey = patchAdaptiveCard(preChatSurvey);\n        console.log(preChatSurvey);\n        setPreChatSurvey(preChatSurvey);\n      }\n    }\n\n    console.log(state);\n    init();\n  }, []);\n\n  const styleOptions = useMemo(() => ({\n    ...defaultStyleOptions,\n    hideUploadButton: !ConfigurationManager.canUploadAttachment,\n    hideSendBox: shouldHideSendBox\n  }), [ConfigurationManager.canUploadAttachment, shouldHideSendBox]);\n\n  const onNewMessage = useCallback((message: IRawMessage) => {\n    console.log(`[onNewMessage] ${message.content}`);\n    dispatch({type: ActionType.SET_LOADING, payload: false});\n  }, [dispatch]);\n\n  const onTypingEvent = useCallback(() => {\n    console.log(`[onTypingEvent]`);\n  }, []);\n\n  const onAgentEndSession = useCallback(() => {\n    console.log(`[onAgentEndSession]`);\n    setShouldHideSendBox(true);\n  }, []);\n\n  const startChat = useCallback(async (_, optionalParams = {}) => {\n    if (state.hasChatStarted) {\n      return;\n    }\n\n    console.log('[startChat]');\n\n    const typingIndicatorMiddleware: any = createTypingIndicatorMiddleware(() => {\n      chatSDK?.sendTypingEvent();\n    });\n\n    setTypingIndicatorMiddleware(() => typingIndicatorMiddleware);\n\n    const dataMaskingRules = await chatSDK?.getDataMaskingRules();\n    const store = createCustomStore();\n    setWebChatStore(store.create());\n\n    store.subscribe('DataMasking', createDataMaskingMiddleware(dataMaskingRules));\n    store.subscribe('ChannelData', channelDataMiddleware);\n\n    // Check for active conversation in cache\n    if (liveChatContext && Object.keys(JSON.parse(liveChatContext)).length > 0) {\n      console.log(\"[liveChatContext]\");\n      optionalParams.liveChatContext = JSON.parse(liveChatContext);\n    }\n\n    dispatch({type: ActionType.SET_CHAT_STARTED, payload: true});\n\n    if (ConfigurationManager.isChatReconnect && chatReconnectConfig.reconnectId) {\n      // Validate reconnect id if any\n      const chatReconnectContext = await chatSDK?.getChatReconnectContext({\n        reconnectId: chatReconnectConfig.reconnectId\n      });\n\n      // Redirect URL if any\n      if (chatReconnectContext?.redirectURL) {\n        window.location.replace(chatReconnectContext?.redirectURL);\n      }\n\n      if (chatReconnectContext?.reconnectId) {\n        optionalParams.reconnectId = chatReconnectContext?.reconnectId;\n      }\n    }\n\n    // Start chats only if there's an existing live chat context or no PreChat\n    if (liveChatContext || !preChatSurvey || chatReconnectConfig.reconnectId) {\n      dispatch({type: ActionType.SET_LOADING, payload: true});\n\n      try {\n        await chatSDK?.startChat(optionalParams);\n      } catch (error: any) {\n        console.log(`Unable to start chat: ${error.message}`);\n        return;\n      }\n\n      // Cache current conversation context\n      const newliveChatContext = await chatSDK?.getCurrentLiveChatContext();\n      if (newliveChatContext && Object.keys(newliveChatContext).length) {\n        console.log('[newliveChatContext]')\n        console.log(newliveChatContext);\n        localStorage.setItem('liveChatContext', JSON.stringify(newliveChatContext));\n      }\n\n      chatSDK?.onNewMessage(onNewMessage, {rehydrate: true});\n      chatSDK?.onTypingEvent(onTypingEvent);\n      chatSDK?.onAgentEndSession(onAgentEndSession);\n\n      const chatAdapter = await chatSDK?.createChatAdapter();\n\n      setChatAdapter(chatAdapter);\n      dispatch({type: ActionType.SET_LOADING, payload: false});\n\n      if ((chatSDK as any)?.getVoiceVideoCalling) {\n        const chatToken: any = await chatSDK?.getChatToken();\n        setChatToken(chatToken);\n      }\n    }\n  }, [chatSDK, state, dispatch, onAgentEndSession, onNewMessage, onTypingEvent, liveChatContext, preChatSurvey]);\n\n  const endChat = useCallback(async () => {\n    console.log('[endChat]');\n    await chatSDK?.endChat();\n    chatAdapter.end && chatAdapter.end();\n\n    // Clean up\n    (VoiceVideoCallingSDK as any)?.close();\n    setChatAdapter(undefined);\n    setChatToken(undefined);\n    setLiveChatContext(undefined);\n    setPreChatSurvey(undefined);\n    setPreChatResponse(undefined);\n    setShouldHideSendBox(false);\n    localStorage.removeItem('liveChatContext');\n    dispatch({type: ActionType.SET_CHAT_STARTED, payload: false});\n  }, [chatSDK, chatAdapter, dispatch, VoiceVideoCallingSDK]);\n\n  const downloadTranscript = useCallback(async () => {\n    console.log('[downloadTranscript]');\n    const transcript = await chatSDK?.getLiveChatTranscript();\n    console.log(transcript);\n  }, [chatSDK]);\n\n  const emailTranscript = useCallback(async () => {\n    console.log('[emailTranscript]');\n    const transcriptBody: any = {\n      emailAddress: process.env.REACT_APP_email as string,\n      attachmentMessage: 'Transcript'\n    }\n    await chatSDK?.emailLiveChatTranscript(transcriptBody);\n  }, [chatSDK]);\n\n  const renderPreChatSurvey = useCallback(() => {\n    const validator = new AdaptiveCardFieldsValidator();\n    const adaptiveCard = new AdaptiveCards.AdaptiveCard();\n    const context = new SerializationContext();\n\n    // Add custom validation handler on parsing every field\n    context.onParseElement = (element: CardElement, source: any, context: SerializationContext) => {\n      validator.attachFieldValidator(element, source, context);\n    }\n\n    adaptiveCard.parse(preChatSurvey, context);\n\n    adaptiveCard.onExecuteAction = async (action: AdaptiveCards.Action) => { // Adaptive Card event handler\n        const inputs = adaptiveCard.getAllInputs();\n        const canSubmitSurvey = validator.canSubmitSurvey(inputs);\n\n        console.log(`[canSubmitSurvey] ${canSubmitSurvey}`);\n\n        if (!canSubmitSurvey) {\n          return;\n        }\n\n        const preChatResponse = (action as any).data;\n        setPreChatResponse(preChatResponse);\n\n        const optionalParams: any = {};\n        if (preChatResponse) {\n          optionalParams.preChatResponse = preChatResponse;\n        }\n\n        dispatch({type: ActionType.SET_LOADING, payload: true});\n\n        try {\n          await chatSDK?.startChat(optionalParams);\n        } catch (error: any) {\n          console.log(`Unable to start chat: ${error.message}`);\n          return;\n        }\n\n        // Cache current conversation context\n        const liveChatContext = await chatSDK?.getCurrentLiveChatContext();\n        if (liveChatContext && Object.keys(liveChatContext).length) {\n          localStorage.setItem('liveChatContext', JSON.stringify(liveChatContext));\n        }\n\n        chatSDK?.onNewMessage(onNewMessage, {rehydrate: true});\n        chatSDK?.onTypingEvent(onTypingEvent);\n        chatSDK?.onAgentEndSession(onAgentEndSession);\n\n        const chatAdapter = await chatSDK?.createChatAdapter();\n\n        setChatAdapter(chatAdapter);\n        dispatch({type: ActionType.SET_LOADING, payload: false});\n\n        if ((chatSDK as any)?.getVoiceVideoCalling) {\n          const chatToken: any = await chatSDK?.getChatToken();\n          setChatToken(chatToken);\n        }\n    }\n\n    const renderedCard = adaptiveCard.render(); // Renders as HTML element\n    return <div ref={(n) => { // Returns React element\n      n && n.firstChild && n.removeChild(n.firstChild); // Removes duplicates fix\n      renderedCard && n && n.appendChild(renderedCard);\n    }} />\n  }, [chatSDK, preChatSurvey])\n\n  return (\n    <>\n      <div>\n        {\n          !state.hasChatStarted && <ChatButton onClick={startChat} />\n        }\n      </div>\n      {\n        state.hasChatStarted && <div className={shouldHideSendBox? `chat-container noSendBox`: `chat-container`}>\n          <ChatHeader\n            title={'Live Chat via Chat SDK'}\n            onClick={endChat}\n          />\n          {\n            (!liveChatContext || !Object.keys(liveChatContext).length) && preChatSurvey && !preChatResponse && renderPreChatSurvey()\n          }\n          {\n            state.isLoading && <Loading />\n          }\n          {\n            !callingConfig.disable && VoiceVideoCallingSDK && chatToken && <Calling\n              VoiceVideoCallingSDK={VoiceVideoCallingSDK}\n              OCClient={chatSDK?.OCClient}\n              chatToken={chatToken}\n            />\n          }\n          {\n            !state.isLoading && state.hasChatStarted && chatAdapter && webChatStore && activityMiddleware && typingIndicatorMiddleware && <ReactWebChat\n              activityMiddleware={activityMiddleware}\n              avatarMiddleware={avatarMiddleware}\n              activityStatusMiddleware={activityStatusMiddleware}\n              typingIndicatorMiddleware={typingIndicatorMiddleware}\n              attachmentMiddleware={attachmentMiddleware}\n              userID=\"teamsvisitor\"\n              directLine={chatAdapter}\n              sendTypingIndicator={true}\n              store={webChatStore}\n              styleOptions={styleOptions}\n            />\n          }\n          {\n            !state.isLoading && state.hasChatStarted && chatAdapter && <ActionBar\n              onDownloadClick={downloadTranscript}\n              onEmailTranscriptClick={emailTranscript}\n            />\n          }\n        </div>\n      }\n    </>\n  );\n}\n\nexport default WebChat;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport WebChat from './components/WebChat/WebChat';\nimport reportWebVitals from './reportWebVitals';\nimport { StateProvider } from './context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider>\n      <WebChat />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}